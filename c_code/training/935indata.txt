






#include<iostream>
#include<fstream>
#include<algorithm>

using namespace std;
int cardCnt;
int mer[1003][1003];
int ans[1003][1003];

void mergeArr(int* cardScore) 
{
	for (int i = 0; i < cardCnt; i++)
		for (int j = i; j < cardCnt; j++) {
			if (i == j) {
				mer[i][j] = cardScore[i];
			}
			else
				mer[i][j] = mer[i][j - 1] + cardScore[j];
		}
}

void ansArr(int* cardScore) { 
	for (int i = 0; i < cardCnt; i++)
		for (int j = 0; j < cardCnt-i; j++) {
		ans[j][j + i] = mer[j][j+i] - min(ans[j + 1][j+i], ans[j][j+i - 1]);
		}

}
int main()
{
	fstream instream("input.txt", ios::in);
	int testcase;
	
	instream >> testcase;

	for (int i = 0; i<testcase; i++)
	{
		instream >> cardCnt;

		int* cardScore = new int[cardCnt];

		for (int j = 0; j < cardCnt; j++)
			cardScore[j] = 0;

		for (int j = 0; j < cardCnt; j++)
			instream >> cardScore[j];
		mergeArr(cardScore);
		ansArr(cardScore);

		cout << ans[0][cardCnt-1] << endl;
		
		delete[] cardScore;
	}
	
	return 0;
}
