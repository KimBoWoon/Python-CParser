#include<iostream>
#include<fstream>
#include<vector>
#include<cstdlib>
using namespace std;
vector <int> S;
void q_sort(int left, int right)		
{
	int pivot, l_hold, r_hold;
	l_hold = left;
	r_hold = right;
	pivot = S[left];
	while (left < right)
	{
		while ((S[right] >= pivot) && (left < right))
			right--;
		if (left != right)
		{
			S[left] = S[right];
		}
		while ((S[left] <= pivot) && (left < right))
			left++;
		if (left != right)
		{
			S[right] = S[left];
			right--;
		}
	}
	S[left] = pivot;
	pivot = left;
	left = l_hold;
	right = r_hold;
	if (left < pivot)
		q_sort(left, pivot - 1);
	if (right > pivot)
		q_sort(pivot + 1, right);
}
int main() {
	int num, K, Snum, near, nearest = 100000, count = 0, sum, i = 0, j = 0;
	ifstream fin;
	fin.open("input.txt");
	fin >> num;
	for (int cnt = 0;cnt < num;cnt++) {
		fin >> Snum >> K;
		for (int cnt1 = 0;cnt1 < Snum;cnt1++) {		
			int val;
			fin >> val;
			S.push_back(val);;
		}
		q_sort(0, Snum - 1);
		i = 0;j = Snum - 1;
		while (i < j) {
			sum = S[i] + S[j];
			near = abs(K - sum);		
			if (nearest > near) {		
				nearest = near;
				count = 1;				
			}
			else if (nearest == near) {		
				count++;
			}
			if (sum > K) {		
				j -= 1;
			}
			else {				
				i += 1;
			}
		}
		cout << count << endl;
		nearest = 1000000;			
		S.clear();					
	}
}