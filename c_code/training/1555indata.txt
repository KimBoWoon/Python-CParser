#include<stdio.h>
#include <stdlib.h>
#define MAXSIZE 9
#define MARK 1
#define UNMARK 0

typedef struct Point {int x, y;} point;
point direction[8]  = {{1,-2},{2,-1},{2,1},{1,2},{-1,2},{-2,1},{-2,-1},{-1,-2}};

int board[MAXSIZE][MAXSIZE], path[MAXSIZE][MAXSIZE];

int knightTour (int n, int m, point pos, int counter)
{
	int i;
	point next;
	if (counter == m * n)
		return 1;
	for (i=0; i<8; i++)
	{
		next.x = pos.x + direction[i].x;
		next.y = pos.y + direction[i].y;
		if ( next.x > 0 && next.x <= m &&next.y > 0 && next.y <= n &&board[next.y][next.x] != MARK )
		{
			board[next.y][next.x] = MARK;
			path[next.y][next.x] = counter+1;			
			if ( knightTour(n, m, next, counter+1) )
				return 1;
			board[next.y][next.x] = UNMARK;
		}
	}
	return 0;
}

void main ( void )
{
	FILE *file;
	int i,test, j, m, n,a,b,k;
	point start;
	file=fopen("input.txt","r"); 
	if(file==NULL) exit(1);
	
	fscanf(file,"%d", &test); 

	for(k=0; k<test; k++)
	{
		fscanf(file,"%d %d", &n,&m);
		fscanf(file,"%d %d", &start.y,&start.x);
	
		for (i=1; i<=n; i++)
			for (j=1; j<=m; j++)
				board[i][j] = UNMARK;

		board[start.y][start.x] = MARK;
		path[start.y][start.x] = 1;
		if( knightTour(n, m, start, 1)==1 )
		{
			printf("1\n");
			for(a=1;a<=n;a++){
				for(b=1;b<=m;b++){
					printf("%2d ",path[a][b]);
				}
				printf("\n");
			}
		}
		else
			printf("0\n");
	}
}


