

#include <iostream>
#include <fstream>
#include <vector>
#include <algorithm>

using namespace std;
typedef	struct location loc;
typedef	struct location {
	int x,y,d;
} loc;

bool sorts(const loc& loc1, const loc& loc2){
	return (loc1.x == loc2.x )? (loc1.y < loc2.y) : (loc1.x < loc2.x);
}
bool sorts2(const loc& loc1, const loc& loc2){
	return loc1.d < loc2.d;
}

int main(){
	ifstream instream;
	instream.open("input.txt");
	
	int no_cases;
	instream>>no_cases;
	while(no_cases--){
		int n;
		instream>>n;
		vector<loc> mono;
		loc monotone;
		for (int i=0;i<n;i++){
			instream>>monotone.x>>monotone.y;
			mono.push_back(monotone);
		}
		sort(mono.begin(), mono.end(), sorts);
		int last = 0, d = 1;
        for (int i=0;i<n;i++){
            int t = i;
            for (int j=i+1;j<n;j++){
                if (mono[j].x == mono[i].x) t = j;
                else break;
            }
            if (mono[i].y < last && last < mono[t].y) continue;
            else if (mono[i].y >= last){
                for (int j=i;j<=t;j++) mono[j].d = d++;
                last = mono[t].y;
            }
            else{
				for (int j=t;j>=i;j--) mono[j].d = d++;
                last = mono[i].y;
            }
            i = t;
        }

		sort(mono.begin(), mono.end(), sorts2);
		
		int n2;
		instream>>n2;
		for(int i=0;i<n2;i++){
			instream>>n;
			cout<<mono[n-1].x<<' '<<mono[n-1].y<<endl;
		}
	}
	instream.close();
}
