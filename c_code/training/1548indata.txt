#pragma warning(disable : 4996) 

#include <stdio.h>
#include <stdlib.h>

#define MAXSIZE 9

#define MARK 1
#define UNMARK 0

typedef struct Point { int x, y; } point;
point direction[8] = { { 1, -2 },{ 2, -1 },{ 2, 1 },{ 1, 2 },
{ -1, 2 },{ -2, 1 },{ -2, -1 },{ -1, -2 } };

int board[MAXSIZE][MAXSIZE], path[MAXSIZE][MAXSIZE];

int knightTour(int m, int n, point pos, int counter);  
void printTour(int row, int col);                

void main(void)
{
   FILE *inFile;
   int i, j, k;
   int numCases;
   int row, col;
   int startX, startY;
   point start;

   inFile = fopen("input.txt", "r"); 

   if (inFile == NULL) exit(1);
   fscanf(inFile, "%d", &numCases);
   for (i = 0; i < numCases; i++)
   {
      fscanf(inFile, "%d %d", &row, &col);       
      fscanf(inFile, "%d %d", &startY, &startX);    

      start.y = startY;
      start.x = startX;

      for (j = 1; j <= row; j++)
         for (k = 1; k <= col; k++)
            board[j][k] = UNMARK;

      board[start.y][start.x] = MARK;
      path[start.y][start.x] = 1;

      if (knightTour(row, col, start, 1)) printTour(row, col);
      else puts("0");
   }

   fclose(inFile);
}
int knightTour(int m, int n, point pos, int counter)
{
   int i;
   point next;
   if (counter == m * n)
      return 1;
   for (i = 0; i < 8; i++)
   {
      next.x = pos.x + direction[i].x;
      next.y = pos.y + direction[i].y;
      if (next.x > 0 && next.x <= n && next.y > 0 && next.y <= m && board[next.y][next.x] != MARK)
      {
         board[next.y][next.x] = MARK;
         path[next.y][next.x] = counter + 1;
         if (knightTour(m, n, next, counter + 1))
            return 1;
         board[next.y][next.x] = UNMARK;
      }
   }
   return 0;
}

void printTour(int row, int col)
{
   int i, j;

   puts("1");
   for (i = 1; i <= row; i++)
   {
      for (j = 1; j <= col; j++)
         printf("%d ", path[i][j]);
      puts("");
   }
}