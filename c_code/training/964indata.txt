
#include <stdio.h>
#include <stdlib.h>
#include <algorithm>

int D[205][105][105][2]; 
int Right[105][105];
int Down[105][105];

using namespace std;

int main()
{
	FILE *fp;
    fp=fopen("input.txt","r");
	if(fp==NULL) exit(1);

	int numTestCases;
	fscanf(fp,"%d",&numTestCases);
   
	while(numTestCases--)
   {
      int N,M,L,G;
      fscanf(fp,"%d %d %d %d",&N,&M,&L,&G);
      for(int i=0;i<N;i++)
      {
         for(int j=0;j<M-1;j++)
         {
            fscanf(fp,"%d",&Right[i][j]);
         }
      }
      for(int i=0;i<N-1;i++)
      {
         for(int j=0;j<M;j++)
         {
            fscanf(fp,"%d",&Down[i][j]);
         }
      }  
      for(int k=0;k<=M+N;k++) 
      {
         for(int i=0;i<N;i++) 
         {
            for(int j=0;j<M;j++) 
            {
               if( !(i==0 && j==0 && k==0) ) D[k][i][j][0]=D[k][i][j][1]=999999999;
               if(j>0) D[k][i][j][0] = min(D[k][i][j][0],D[k][i][j-1][0] + Right[i][j-1]);

               if(k>0 && i>0) D[k][i][j][1] = min(D[k][i][j][1],D[k-1][i-1][j][0] + Down[i-1][j]);

               if(i>0) D[k][i][j][1] = min(D[k][i][j][1],D[k][i-1][j][1] + Down[i-1][j]);

               if(k>0 && j>0) D[k][i][j][0] = min(D[k][i][j][0],D[k-1][i][j-1][1] + Right[i][j-1]);
			}
         }
      }
      int k=0; 
      int s=-1; 
      for(k=0;k<=N+M;k++)
      {
         if(D[k][N-1][M-1][1]<=G || D[k][N-1][M-1][0]<=G){
			 s=k; break;
		 }
      }
      if(s==-1)printf("%d\n",s); 
      else printf("%d\n",(N+M-2)*L+s);
      for(int i=0;i<=N+M;i++)
      {
         for(int j=0;j<N;j++)
         {
            for(int k=0;k<M;k++)
            {
               D[i][j][k][0]=D[i][j][k][1]=0;
            }
         }
      }
   }
   return 0;
   
   fclose(fp);

}