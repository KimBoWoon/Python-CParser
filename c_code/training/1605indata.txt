#include <stdio.h>
#include <stdlib.h>

int merging[501][501] = { 0 };

int merge(int *f, int *n, int last);
int MIN(int a, int b);   

void main()
{
	FILE *f;
	int i;
	int count;
 
	f = fopen("input.txt", "r");
	if (f == NULL)   exit(1);
 
	fscanf(f, "%d", &count);
 
	for (i = 0; i<count; i++)
	{
		int j, k;
		int fileCnt;
		int *filesArr;
		int *sumArr;
 
		fscanf(f, "%d", &fileCnt);
		filesArr = (int*)malloc(sizeof(int) * (fileCnt + 1));
		sumArr = (int*)malloc(sizeof(int) * (fileCnt + 1));
 
		sumArr[0] = 0; 
 
		for (j = 1; j <= fileCnt; j++)   
		{
			fscanf(f, "%d", &filesArr[j]);
			sumArr[j] = sumArr[j - 1] + filesArr[j];
		}

		printf("%d\n", merge(filesArr, sumArr, fileCnt));
		
		free(filesArr);
		free(sumArr);
	}
	fclose(f);
}
int merge(int *f, int *s, int last)
{
	int i,j,k, diagonal;
	int tmp;
	
	for (diagonal = 1; diagonal <= last-1; diagonal++)
	{
		for (i = 1; i <= last - diagonal; i++)
		{
			j = i + diagonal;
			for (k = i; k < j; k++)
			{
				tmp = merging[i][k] + merging[k + 1][j] + s[j] - s[i-1];
				if(i == k)
					merging[i][j] = tmp;
				else if(merging[i][j] > tmp)
					merging[i][j] = tmp;
			}
		}
	}
	return merging[1][last];
}

