#include <iostream>
#include <cstdlib>
#include <fstream>

#define MAX_N 15
#define MAX_TUPLE 1000			

#define ABS(a) ( ((a) < 0)? -(a) : (a) )

class Ducci
{
private:
	int N;								
	int count;							
	int tuples[MAX_TUPLE][MAX_N];		
public:
	Ducci(const int N) : count(0)
	{
		this->N = N;
	}
	void buildTuples(std::ifstream& fileDes)
	{
		for (int i = 0; i < N; i++)
			fileDes >> tuples[count][i];

	}
	void computeTuples()
	{
		bool hasLoop = false;			
		bool isZero = false;			

		while ((!hasLoop) && (!isZero))
		{
			for (int j = 0; j < N; j++)
			{
				if (j == (N - 1)) tuples[count+1][j] = ABS(tuples[count][j] - tuples[count][0]);

				else tuples[count+1][j] = ABS(tuples[count][j] - tuples[count][j + 1]);
			}

			count++;

			for (int j = 0; j < N; j++)
			{
				if (tuples[count][j] != 0) break;

				if (j == (N - 1)) isZero = true;
			}
			
			if (isZero) break;


			for (int i = 0; i < count; i++)
			{
				for (int j = 0; j < N; j++)
				{
					if (tuples[count][j] != tuples[i][j]) break;

					if (j == (N - 1))
					{
						hasLoop = true;
					}
				}

				if (hasLoop) break;
			}

	

		}

		if (hasLoop)
			std::cout << "LOOP" << std::endl;
		else if (isZero)
			std::cout << "ZERO" << std::endl;
	}

};

int main()
{
	int trialNum;				

	std::ifstream fileDes;		
	fileDes.open("input.txt");


	fileDes >> trialNum;			


	for (int i = 0; i < trialNum; i++)
	{
		int n;
		fileDes >> n;					

		Ducci ducci(n);					

		ducci.buildTuples(fileDes);		
		ducci.computeTuples();			

	}

	fileDes.close();

	return 0;
}