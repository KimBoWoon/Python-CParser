
#include <stdio.h>
#include <stdlib.h>
#define MAX 1000

int size = 0;
int *getPrimeArray(int *array);
void checkGoldbach(int *array, int num);

void main() {
	FILE *f;
	int numTestCases = 0;
	int number = 0;
	int i = 0;
	int *array = (int *)malloc(sizeof(int)*MAX);

	f = fopen("input.txt", "r");
	fscanf(f, "%d", &numTestCases);
	array = getPrimeArray(array);

	for (i = 0; i < numTestCases; i++) {
		fscanf(f, "%d", &number);
		checkGoldbach(array, number);
	}
	fclose(f);
}

int *getPrimeArray(int *array) {
	int i = 0;
	int j = 2;
	int k = 0;
	int check = 0;

	while (1){
		if (j == 1001)
			break;
		for (i = 2; i*i <= j; i++) {
			if (j % i == 0) {
				check = 1;
				break;
			}
		}
		if (check == 0)
			*(array + k++) = j;
		check = 0;
		j++;
	}
	size = k;

	int *temp = (int *)malloc(sizeof(int)*k);
	for (i = 0; i < k; i++) {
		*(temp + i) = *(array + i);
	}
	if (array)
		free(array);

	return temp;
}

void checkGoldbach(int *array, int num) {
	int i = 0;
	int j = 0;
	int a = 0;
	int b = 0;

	for (i = 0; i < size; i++) {
		for (j = i; j < size; j++) {
			if (*(array + i) + *(array + j) > num)
				break;
			if (*(array + i) + *(array + j) == num) {
				if (a == 0 && b == 0) {
					a = *(array + i);
					b = *(array + j);
				}
				else if (b - a > *(array + j) - *(array + i)) {
					a = *(array + i);
					b = *(array + j);
				}
			}
		}
	}
	printf("%d %d\n", a, b);
}