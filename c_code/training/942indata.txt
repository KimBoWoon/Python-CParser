

#include<iostream>
#include<fstream>
#include<algorithm>

using namespace std;

int d[1001][1001];
int cards[1001];
int s[1001];

int func(int l, int r)
{
	if (l > r)
		return 0;
	if (l == r)
		return cards[l];

	int& ret = d[l][r];

	if (ret >= 0)
		return ret;

	ret = max(s[r] - s[l - 1] - func(l + 1, r), s[r] - s[l - 1] - func(l, r - 1));

	return ret;
}

int main()
{
	ifstream infile;
	int testcases, c_n;

	infile.open("input.txt");

	infile >> testcases;

	for (int i = 0; i < testcases; i++)
	{
		infile >> c_n;
		s[0] = 0;

		for (int j = 1; j <= c_n; j++)
		{
			infile >> cards[j];
			s[j] = s[j - 1] + cards[j];
		}

		for (int j = 0; j <= 1000; j++)
		{
			for (int k = 0; k <= 1000; k++)
				d[j][k] = -1;
		}

		cout << func(1, c_n) << endl;
	}

	return 0;
}