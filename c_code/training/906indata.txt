



#include<stdio.h>
#include<stdlib.h>


#define max(x,y) ((x) > (y) ? (x) : (y)) 
#define min(x,y) ((x) < (y) ? (x) : (y))

int workingBackward(int s, int e);
int A[1003], S[1003];
int D[1003][1003];

int main()
{
   FILE * inFile;
   int N,M;
   int testCases;
   int n;
   int i;

   inFile = fopen("input.txt", "r");

   fscanf(inFile, "%d", &testCases);

   for (n = 0; n < testCases; n++)
   {
	   fscanf(inFile, "%d", &N);
	   for(i=1; i<=N; i++)
	   { 
		   fscanf(inFile, "%d", A+i);
		   S[i] = S[i-1] + A[i];

	   }

	   for(i=1; i<=N; i++)
		   for(int j=1; j<=N; j++)
		   {
			   D[i][j] = -1;
		   }


	   printf("%d\n", workingBackward(1,N));
   
   }

   fclose(inFile);
}

int workingBackward(int s, int e)
{
	if(s > e)
		return 0;
	if(s == e)
		return A[s];

	int ret = D[s][e];
	if(ret >= 0) 
		return ret;

	ret = max(S[e] - S[s-1] - workingBackward(s+1, e), S[e] - S[s-1] - workingBackward(s, e-1));
	D[s][e] = ret;
	return ret;
}