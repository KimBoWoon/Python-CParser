#include <iostream>
#include <fstream>

int ispalim(int testnum);
int checkPalindrome(int str[], int first, int last);

int main()
{
	std::fstream infile;
	infile.open("input.txt");
	if (infile.fail())
	{
		std::cerr << "input file error";
	}
	int testcase;
	infile >> testcase;
	for (int i = 0; i < testcase; i++)
	{
		int testnum;
		infile >> testnum;
		std::cout << ispalim(testnum) << std::endl;
	}
	return 0;
}

int ispalim(int testnum)
{
	int temparray[10000] = { 0, };

	int tempnum = testnum;
	int count = 0;
	int dividenum = 64;
	while (dividenum>1)
	{
		while (tempnum > 0)
		{
			temparray[count++] = tempnum % dividenum;
			tempnum /= dividenum;
		}
		if (checkPalindrome(temparray, 0, count-1)) return 1;
		dividenum--;
		count = 0;
		tempnum = testnum;
	}
	return 0;
}

int checkPalindrome(int str[], int first, int last)
{
	
	if (last <= first)
		return 1;
	else if (str[first] != str[last])
		return 0;
	else
		return checkPalindrome(str, first + 1, last - 1);
}