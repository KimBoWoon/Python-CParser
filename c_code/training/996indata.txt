#include <iostream>
#include <fstream>

#define MIN(a, b) (((a) > (b)) ? (b) : (a))
#define INF 87654321

struct Node {
	int down, right;
};

Node arr[100][100];
int gasCost[2][200][100][100];

int main(void) {
	std::ifstream fin("input.txt");
	int nCase; fin >> nCase;

	int M, N, L, G;

	while (nCase--) {
		fin >> M >> N >> L >> G;

		for (int i = 0; i < M; i++) {
			for (int j = 1; j < N; j++) {
				fin >> arr[i][j].right;
			}
		}

		for (int i = 1; i < M; i++) {
			for (int j = 0; j < N; j++) {
				fin >> arr[i][j].down;
			}
		}
		
		for (int dir = 0; dir < 2; dir++) {
			for (int k = 0; k < M + N - 2; k++) {
				for (int i = 0; i < M; i++) {
					for (int j = 0; j < N; j++) {
						gasCost[dir][k][i][j] = INF;
					}
				}
			}
		} 
		
		gasCost[0][0][0][0] = gasCost[1][0][0][0] = 0;

		for (int i = 1; i < M; i++) {
			gasCost[0][0][i][0] = gasCost[0][0][i - 1][0] + arr[i][0].down;
		}

		for (int j = 1; j < N; j++) {
			gasCost[1][0][0][j] = gasCost[1][0][0][j - 1] + arr[0][j].right;
		} 

		for (int i = 1; i < M; i++) {
			for (int j = 1; j < N; j++) {
				for (int k = 1; k < M + N - 2; k++) {
					gasCost[0][k][i][j]
						= MIN(gasCost[0][k][i - 1][j] + arr[i][j].down,
							gasCost[1][k - 1][i - 1][j] + arr[i][j].down);
					gasCost[1][k][i][j]
						= MIN(gasCost[0][k - 1][i][j - 1] + arr[i][j].right,
							gasCost[1][k][i][j - 1] + arr[i][j].right);
				}
			}
		} 

		bool flag = false;
		for (int k = 1; k < M + N - 2; k++) {
			if (gasCost[0][k][M - 1][N - 1] <= G || gasCost[1][k][M - 1][N - 1] <= G) {
				flag = true;
				std::cout << k + (M + N - 2) * L << std::endl;
				break;
			}
		}

		if (!flag) {
			std::cout << -1 << std::endl;
		}
	}

	fin.close();
	return 0;
}