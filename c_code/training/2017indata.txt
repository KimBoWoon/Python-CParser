

#pragma warning(disable:4996)
#include<stdio.h>
#include<stdlib.h>
int *arr;
void Two_Num(int s, int k);
int count = 0;
int partition(int a[], int low, int high)
{
	int i, j;
	int pivot, pivotPos, tmp;
	pivot = a[low];
	j = low;
	for (i = low + 1; i <= high; i++)
	{
		if (a[i] < pivot)
		{
			j++;
			
			tmp = a[i]; a[i] = a[j]; a[j] = tmp;
		}
	}
	pivotPos = j;
	tmp = a[low]; a[low] = a[pivotPos]; a[pivotPos] = tmp;
	return pivotPos;
}
void quickSort(int v[], int low, int high)
{
	int pivotPos;
	if (high > low)
	{
		pivotPos = partition(v, low, high);
		quickSort(v, low, pivotPos - 1);
		quickSort(v, pivotPos + 1, high);
	}
}
int main(void)
{
	int no_cases, i, j;
	int s, k;
	FILE *in_file;
	in_file = fopen("input.txt", "r"); 
	if (in_file == NULL) exit(1);
	fscanf(in_file, "%d", &no_cases);  
	
	for (i = 0; i < no_cases; i++){
		fscanf(in_file, "%d %d", &s, &k);
		arr = (int*)malloc(sizeof(int)*s);
		for (j = 0; j < s; j++){
			
			fscanf(in_file, "%d", &arr[j]);
		}
		quickSort(arr, 0, s-1);
		count = 0;
		Two_Num(s, k);
		printf("%d\n", count);

		free(arr);
	}
	return 0;
}
void Two_Num(int s, int k)
{
	int start, end,min=1000000000;
	start = 0;
	end = s - 1;

	while (start < end) 
	{
		if (abs(k - arr[start] - arr[end]) < min){ 
			min = abs(k - arr[start] - arr[end]);
			count = 1;
		}
		else if (abs(k - arr[start] - arr[end]) == min){
			count++;
		}
		if (arr[start] + arr[end] < k)  
			start++;
		else                             
			end--;
	}
}