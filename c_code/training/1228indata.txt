
#include <iostream>
#include <fstream>

void goldbachSet(int* set,int n);
bool isPrime(int n);

int max= 0;

int main()
{
	std::ifstream infile("input.txt");

	int numCases;
	int n;
	int *set;

	set = new int[2];
	infile >> numCases;

	for(int i=0; i < numCases; i++)
	{
		max= 0;
		infile >> n;
		
		goldbachSet(set,n);


		std::cout<<max << ' ' << n-max <<std::endl;
	}

	delete[] set;
	return 0;
}


void goldbachSet(int* set, int n)
{
	if ( isPrime(n/2))
	{

		max = n/2;
	}
	else
	{
		for( int i=1; i< n/2; i++)
		{
			if(  isPrime(i) && isPrime( n-i) )
			{

				if( i>= max )
					max = i;
			}
		}
	}
}

bool isPrime(int n)
{
	if( n == 1 )
		return true;


	for( int i =2; i*i <= n; i++)
	{
		if(n %i ==0 )
			return false;
	}

	return true;
}
