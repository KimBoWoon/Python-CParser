#include <stdio.h>
#include <stdlib.h>

#define MAXSIZE 9
#define MARK 1
#define UNMARK 0

typedef struct Point {int x, y;} point;	

point direction[8] = {{1, -2}, {2, -1}, {2, 1}, {1, 2},			
{-1, 2}, {-2, 1}, {-2, -1}, {-1, -2}};

int board[MAXSIZE][MAXSIZE], path[MAXSIZE][MAXSIZE];	
int knightTour (int m, int n, point pos, int counter)
{
	int i;
	point next;	
	if (counter == m * n)		
		return 1;				
	for (i=0; i<8; i++)			
	{
		next.x = pos.x + direction[i].x;	
		next.y = pos.y + direction[i].y;
		if ( next.x > 0 && next.x <= n &&next.y > 0 && next.y <= m &&board[next.y][next.x] != MARK )
		{
			board[next.y][next.x] = MARK;	
			path[next.y][next.x] = counter+1;	
			if ( knightTour(m, n, next, counter+1) )		
				return 1;
			board[next.y][next.x] = UNMARK;		
		}
	}
	return 0;
}
void printTour(int h, int v)		
{
	int i,j;
	for(i=1; i<=h; i++)	{
		for(j=1; j<=v; j++)	{
			printf("%d ", path[i][j]);
		}
		printf("\n");
	}
}
void main ( void )
{
	int a;
	int row, column;
	int i, j, m, n;
	int count;
	FILE *f;
	f=fopen("input.txt", "r");
	if(f==NULL) exit(1);

	fscanf(f, "%d", &count);

	for(a=0; a<count; a++)	{
		point start;
		fscanf(f, "%d %d", &row, &column);		
		fscanf(f, "%d %d", &start.y, &start.x);	

		for (i=1; i<=row; i++)
			for (j=1; j<=column; j++)
				board[i][j] = UNMARK;
		board[start.y][start.x] = MARK;
		path[start.y][start.x] = 1;
		if ( knightTour(row, column, start, 1) )	{
			printf("1\n");
			printTour(row, column);
		}
		else
			printf("0\n");
	}
	fclose(f);	
}