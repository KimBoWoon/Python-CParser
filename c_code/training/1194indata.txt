


#include<stdio.h>
#include<math.h>

#define TRUE 1
#define FALSE 0
#define pSize 1000      

int prime[pSize] = {0, };

int checkPrime(int _number)     
{
	int i;
	int sqrtNum = (int)sqrt(_number);

	for(i=2; i<=sqrtNum; i++)
	{
		if(_number % i == 0)
		{
			return FALSE;
		}
	}

	return TRUE;
}

void initPrime()
{
	int i;
	const int notPrime = 0;

	for(i=0; i<pSize; i++)
	{
		if(TRUE == checkPrime(i))
		{
			prime[i] = i;           
		}
		else
		{
			prime[i] = notPrime;    
		}
	}
}

void findGoldbach(int _n)
{
	int i, j;
	int start = _n / 2;

	for(i=start; i>1; i--)
	{
		for(j=start; j<pSize; j++)
		{
			int sum = prime[i] + prime[j];
			if(sum > _n)        
			{
				break;
			}
			
			if(sum == _n)       
			{
				printf("%d %d\n", prime[i], prime[j]);
				return;
			}
		}
	}
}

int main(void)
{
	FILE *fp = NULL;
	int testCase;

	initPrime();                    

	fp = fopen("input.txt", "r");   
	fscanf(fp, "%d", &testCase);    
	while(testCase--)
	{
		int n;
		fscanf(fp, "%d", &n);       
		findGoldbach(n);            
	}

	fclose(fp);                     
	return 0;
}