#include <stdio.h>
#include <stdlib.h>

int K[503], P[503], M[503][503];

int fileMerge(int a, int b) {
	int i, j, p;
	for (i = 1; i <= b - a; i++) {
		for (j = 1; j < b; j++) {

			int k = i + j;
			int min = 0, tmp = 0;

			if (k <= b) {
				for (p = j; p < k; p++) {
					if (p == j && p + 1 == k)
						tmp = M[j][p] + M[p + 1][k];

					else if (p == j && p + 1 != k)
						tmp = P[k] - P[j] + M[j][p] + M[p + 1][k];

					else if (p != j && p + 1 == k)
						tmp = P[k - 1] - P[j - 1] + M[j][p] + M[p + 1][k];

					else
						tmp = P[k] - P[j - 1] + M[j][p] + M[p + 1][k];
				
					if (min == 0 || tmp < min)
						min = tmp;
				}
				M[j][k] = min;
			}
		}
	}
	return M[a][b];
}

void main() {
	FILE *in_file;
	in_file = fopen("input.txt", "r");
	if (in_file == NULL) exit(1);

	int no_cases, no_data, i, j;
	fscanf(in_file, "%d", &no_cases);

	for (i = 0; i < no_cases; i++) {
		fscanf(in_file, "%d", &no_data);

		for (j = 1; j <= no_data; j++) {
			fscanf(in_file, "%d", &K[j]);
			P[j] = P[j - 1] + K[j];
		}

		for (j = 1; j <= no_data; j++) {
			M[j][j] = K[j];
		}
		fileMerge(1, no_data);
		printf("%d\n", M[1][no_data]);

	}
	fclose(in_file);
}