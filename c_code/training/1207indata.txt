

#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#pragma warning(disable : 4996)
int findPrime(int number);
void main(void)
{
	FILE* inFile;
	int testCase = 0, i, number,j=0,k,check=0, littleNum=0, bigNum=170;
	int prime[1000] = { 0 };
	int realPrime[170] = { 0 };
	inFile = fopen("input.txt", "r"); 
	if (inFile == NULL) exit(1);
	fscanf(inFile, "%d", &testCase); 
	for (i = 2; i < 1000; i++)
	{
		prime[i] = findPrime(i);
	}
	for (i = 2; i < 1000; i++)
	{
		if (prime[i] != 0)
			realPrime[j++] = i;
	}
	for (i = 0; i < testCase; i++)
	{
		fscanf(inFile, "%d", &number); 
		for (j = 0; j < 168; j++)
		{
			for (k = 0; k < 168; k++)
			{
				if ((realPrime[j] + realPrime[k]) == number)
				{
					if (realPrime[j] >= realPrime[k])
					{
						if ((bigNum - littleNum) >= (realPrime[j] - realPrime[k]))
						{
							littleNum = realPrime[k];
							bigNum = realPrime[j];
						}
					}
					else
					{
						if ((bigNum - littleNum) >= (realPrime[k] - realPrime[j]))
						{
							littleNum = realPrime[j];
							bigNum = realPrime[k];
						}
					}
					if (littleNum == bigNum)
					{
						check = 1;
						break;
					}
				}
			}
			if (check) break;
		}
		printf("%d %d\n", littleNum, bigNum);
		check = 0;
		bigNum = 170;
		littleNum = 0;
	}
	fclose(inFile);
}
int findPrime(int number)
{
	int divisor;
	for (divisor = 2; divisor*divisor <= number; divisor++) 
	{
		if ((number%divisor) == 0) 
		{
			return 0;
		}
	}
	return 1;
}