

#pragma warning(disable : 4996) 

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int recurFactorial(int n);						
void orderedPermuteString(char *str, int n);	

void main(void)
{
	FILE *inFile;
	int i, j;
	int numCases;
	int strLength, strNumber;
	char baseStr[] = "abcdefghijkl";
	char* testStr;

	inFile = fopen("input.txt", "r"); 

	if (inFile == NULL) exit(1);
	fscanf(inFile, "%d", &numCases); 
	for (i = 0; i<numCases; i++)
	{
		fscanf(inFile, "%d %d", &strLength, &strNumber); 
		testStr = (char*)malloc(sizeof(char)*(strLength + 1));
		for (j = 0; j < strLength; j++)
			testStr[j] = baseStr[j];
		testStr[strLength] = '\0';
		
		orderedPermuteString(testStr, strNumber - 1);   
	}

	fclose(inFile); 
}

int recurFactorial(int n)
{
	if (n <= 1) return 1;           
	return n * recurFactorial(n - 1);   
}

void orderedPermuteString(char *str, int n)
{
	int i, cnt;
	char* buffer;

	if (strlen(str) == 1)			
		printf("%s\n", str);
	else
	{
		printf("%c", str[n / recurFactorial(strlen(str) - 1)]);

		buffer = (char*)malloc(sizeof(char)*strlen(str));
		for (i = 0, cnt = 0; i < strlen(str); i++, cnt++)
		{
			if (i == (n / recurFactorial(strlen(str) - 1)))
				buffer[cnt] = str[++i];
			else buffer[cnt] = str[i];
		}
		buffer[strlen(str) - 1] = '\0';

		orderedPermuteString(buffer, n % recurFactorial(strlen(str) - 1));	
	}
}