






#include<iostream>
#include<cstdlib>
#include<fstream>

using namespace std;

int cmpfunc(const void * a, const void * b) { return (*(int*)a - *(int*)b); }
int arrNum, K;


void TwoNumbers(int* arr, int left, int right)
{
	int sum,Num,ans=-10000000000;
	int Count=0;

	while (right >= 0 && left < arrNum) {
		sum = arr[left] + arr[right]; 
		Num = abs(K - sum); 

		if (left<right) 
		{			
			if (sum == K)
				Count++;
		}
		else 
		{
		if (ans == Num)
				Count++;
		}
		

		if (right - left == 1 && Count == 0) { 
			ans = abs(K - sum);					
			left++; right--;					
			Count++;
		}
		if (sum< K)
			left++;
		else if (sum> K)
			right--;
		else if (sum == K) {
			left++; right--;
		}
	
	}
	cout << Count << endl;
}

int main()
{
	fstream instream("input.txt", ios::in);
	int testcase;

	instream >> testcase;

	for (int i = 0; i<testcase; i++)
	{
		instream >> arrNum >> K;
		int* arr = new int[arrNum];
		for (int j = 0; j < arrNum; j++)
		instream >> arr[j]; 

		qsort(arr,arrNum, sizeof(int), cmpfunc); 

		TwoNumbers(arr, 0, arrNum-1);
			

	}
	return 0;
}
