#include <iostream>
#include <fstream>
#include <cstdlib>
#include<string>

using namespace std;

int f(int n);

int main(){
	ifstream inStream;
	int numTestCases;	

	inStream.open("input.txt");
	if (inStream.fail()){
		cerr << "Input file opening failed.\n";
		exit(1);
	}

	inStream >> numTestCases;	

	for (int i = 0; i < numTestCases; i++){

		int n1, n2;
		int num = 0;
		inStream >> n1 >> n2;	

		char str0[14] = {'0', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', '0' };

		char str1[14] = { '0' };

		char result[14] = { '0' };

		int re = 0;

		for (int a = 1; a <= n1; a++){
			str1[a] = str0[a];
		}

		if (n1 == 1){
			result[0] = 'a';
		}
		else{
			for (int a = n1-1; a>0; a--){
				int z;

				if (n2 == 0)
					z = n1 - re;

				else if (n2%f(a) == 0 && n2 / f(a) > 0)
					z = n2 / f(a);

				else if (n2%f(a) == 0 && n2 / f(a) == 0)
					z = 1;

				else
					z = (n2 / f(a)) + 1;

				

					
				result[re] = str1[z];

				for (int b = z; b <n1; b++){
					str1[b] = str1[(b + 1)];	
				}

				if (z == 1)
					n2 = n2;
				
				else{
					n2 = n2 % f(a);
				}
				++re;
			}

			result[re] = str1[1];

			
		}
		for (int c = 0; c < n1; c++)
				cout << result[c];

		cout << endl;
	}

	inStream.close();
	return 0;
}

int f(int n) {
	if (n <= 1) 
		return 1;
	else        
		return n*f(n - 1);
}