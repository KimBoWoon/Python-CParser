#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <string.h>

const int INF = 987654321;

inline int min(int a, int b) { return a<b ? a : b; }
int m, n, l, g, width[100][100], height[100][100];
int dp[200][100][100][2];

int main() {
	FILE* file;
	file = fopen("input.txt", "r");

	int cases;
	fscanf(file, "%d", &cases);
	
	while (cases--) {
		fscanf(file, "%d%d%d%d", &m, &n, &l, &g);
		for (int i = 0; i<m; ++i)
			for (int j = 1; j<n; ++j)
				fscanf(file, "%d", width[i] + j);
		for (int i = 1; i<m; ++i)
			for (int j = 0; j<n; ++j)
				fscanf(file, "%d", height[i] + j);
		for (int y = 1; y<m; ++y) {
			dp[0][y][0][1] = dp[0][y - 1][0][1] + height[y][0];
			dp[0][y][0][0] = INF;
		}
		for (int x = 1; x<n; ++x) {
			dp[0][0][x][0] = dp[0][0][x - 1][0] + width[0][x];
			dp[0][0][x][1] = INF;
		}
		for (int y = 1; y<m; ++y)
			for (int x = 1; x<n; ++x)
				dp[0][y][x][0] = dp[0][y][x][1] = INF;
		int k;
		for (k = 1; k<m + n - 2; ++k) {
			for (int y = 1; y<m; ++y)
				dp[k][y][0][0] = dp[k - 1][y][0][0],
				dp[k][y][0][1] = dp[k - 1][y][0][1];
			for (int x = 1; x<n; ++x)
				dp[k][0][x][0] = dp[k - 1][0][x][0],
				dp[k][0][x][1] = dp[k - 1][0][x][1];
			for (int y = 1; y<m; ++y)
				for (int x = 1; x<n; ++x)
					dp[k][y][x][0] = min(dp[k - 1][y][x][0], min(dp[k - 1][y][x - 1][1] + width[y][x], dp[k][y][x - 1][0] + width[y][x])),
					dp[k][y][x][1] = min(dp[k - 1][y][x][1], min(dp[k - 1][y - 1][x][0] + height[y][x], dp[k][y - 1][x][1] + height[y][x]));
			if (dp[k][m - 1][n - 1][0] <= g || dp[k][m - 1][n - 1][1] <= g) break;
		}
		if (k < m + n - 2)
			printf("%d\n", l * (m + n - 2) + k);
		else
			puts("-1");
	}
	return 0;
}