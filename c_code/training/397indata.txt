#include <iostream>
#include <fstream>

void searchCan(char **room,int *x,int *y,int *m,int *n)
{
	if (room[*x][*y] == '.')
		return;
	else
	{
		if (*y >= (*m)-1)
		{
			*y = 0;
			if ((*x) >= (*n) - 1)
				(*x) = -1;
			else
				*x+=1;
		}
		else
			*y+=1;
	}
}

void countRoom(char **room, int x, int y,int *countNum, char canRoom, char oldRoom)
{
	if (room[x][y] != canRoom)
		return;
	else
	{
		*countNum += 1;
		room[x][y] = oldRoom;
		countRoom(room, x - 1, y, countNum, canRoom, oldRoom);
		countRoom(room, x + 1, y, countNum, canRoom, oldRoom);
		countRoom(room, x, y - 1, countNum, canRoom, oldRoom);
		countRoom(room, x, y + 1, countNum, canRoom, oldRoom);
	}
}

void q_sort(int numbers[], int left, int right)
{
	if (left == right) return;
	int pivot, l_hold, r_hold;
	l_hold = left;
	r_hold = right;
	pivot = numbers[left];

	while (left < right)
	{
		while ((numbers[right] >= pivot) && (left < right))
			right--;

		if (left != right)
		{
			numbers[left] = numbers[right];
			left++;
		}

		while ((numbers[left] <= pivot) && (left < right))
			left++;

		if (left != right)
		{
			numbers[right] = numbers[left];
			right--;
		}
	}

	numbers[left] = pivot;
	pivot = left;
	left = l_hold;
	right = r_hold;

	if (left < pivot)
		q_sort(numbers, left, pivot - 1);
	if (right > pivot)
		q_sort(numbers, pivot + 1, right);
}


int main()
{
	std::ifstream file("input.txt");
	int testCase = 0, m = 0, n = 0;
	file >> testCase;
	while (testCase--)
	{
		file >> m >> n;
		char **room = new char*[n];
		int roomNum[100] = { 0, }, x = 1, y = 1;
		for (int i = 0; i < n; i++)
			room[i] = new char[m];
		for (int i = 0; i < n; i++)
			for (int j = 0; j < m; j++)
				file >> room[i][j];
		int i = 0;
		while (true)
		{

			while (room[x][y] != '.')
			{
				searchCan(room, &x, &y, &m, &n);
				if (x == -1)
					break;
			}
			if (x == -1)
				break;
			countRoom(room, x, y, &roomNum[i], '.', '+');
			i++;
			
		}
		i--;
		q_sort(roomNum, 0, i);
		std::cout << i+1 << std::endl;
		while (i >= 0)
		{
			std::cout << roomNum[i] << " ";
			i--;
		}
		std::cout << std::endl;
	}
}