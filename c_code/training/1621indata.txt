
#include<iostream>
#include<fstream>

using namespace std;

int fileMerge(int start, int end);

int fileN[502];
int mergeValue[502][502];
int mergeMinSum[502][502];


int main(void){

	ifstream inStream;
	inStream.open("input.txt");

	int numTestCases;
	inStream >> numTestCases;

	while (numTestCases--){

		int count;
		inStream >> count;

		for (int i = 1; i <= count; i++)
			inStream >> fileN[i];

		for (int i = 1; i <= count; i++){
			for (int j = 1; j <= count; j++){
				mergeValue[i][j] = 0;  
				mergeMinSum[i][j] = -1;
			}
		}

		cout << fileMerge(1, count) << endl;

	}
	return 0;
}

int fileMerge(int start, int end){

	for (int i = start; i <= end; i++){
		mergeValue[i][i] = fileN[i];
		mergeMinSum[i][i] = 0;
	}

	for (int k = 2; k <= end; k++){
		int j = k;
		int i = 1;
		while (j <= end){
			int minV;
			int minS = -1;
			for (int a = i; a < j; a++){
				int value = mergeValue[i][a] + mergeValue[a + 1][j];
				int value2 = mergeMinSum[i][a] + mergeMinSum[a + 1][j] + value;

				if (value2 < minS || minS<0){
					minV = value;
					minS = value2;
				}
			}
			mergeValue[i][j] = minV;
			mergeMinSum[i][j] = minS;
			i++;
			j++;

		}
	}
	return mergeMinSum[start][end];
}


