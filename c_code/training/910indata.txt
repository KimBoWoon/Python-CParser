#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <fstream>
#include <algorithm>

using namespace std;


int cards[1001];
int choices[1001][1001];
int lineSum[1001];

int Choice(int start, int last);

int main() {

	ifstream dataFile("input.txt");
	int caseCount;
	dataFile >> caseCount;

	for (int i = 1; i <= caseCount; i++) {
		int cardCount;
		dataFile >> cardCount;

		for (int j = 1; j <= cardCount; j++) {
			dataFile >> cards[j];
			choices[j][j] = cards[j];
		}

		lineSum[1] = cards[1];
		for (int k = 1; k < cardCount; k++) {
			lineSum[k + 1] = lineSum[k] + cards[k + 1];
		}

		cout << Choice(1, cardCount) << endl;		
	}
	getchar();
	dataFile.close();
	return 0;
}

int Choice(int start, int last) {
	
	for (int f = 1; f < last; f++) {
		choices[f][f + 1] = cards[f] >= cards[f + 1] ? cards[f] : cards[f + 1];
	}

	for (int range = 2; range <= last - 1; range++) {
		for (int s = 1; s + range <= last; s++) {
			choices[s][s + range] = (lineSum[s + range] - lineSum[s - 1]) - (min(choices[s][s + range - 1], choices[s + 1][s + range]));
		}
	}

	return choices[start][last];

}
