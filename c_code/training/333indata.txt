#include <iostream>
#include <fstream>

void init_room(std::ifstream& inFile, char room[100][100], int width, int height);
void find_room(char room[100][100], int width, int height);
int room_size(char room[100][100], int x, int y, char point, char plus);
void sort(int numbers[100], int count);

int main(void){

   std::ifstream inFile("input.txt");
   if (inFile.fail()){
      std::cout << "not file" << std::endl;
      return 0;
   }

   int testCases = 0;
   inFile >> testCases;

   char room[100][100] = { ' ' };
   int width = 0;
   int height = 0;

   for (int i = 0; i < testCases; i++){
      inFile >> width >> height;

      init_room(inFile, room, width, height);

      find_room(room, width, height);
   }
   return 0;
}

void init_room(std::ifstream& inFile, char room[100][100], int width, int height){
   for (int i = 0; i < height; i++){
      for (int j = 0; j < width; j++){
         inFile >> room[i][j];
      }
   }
}

void find_room(char room[100][100], int width, int height){

   int rooms[100] = { 0 };
   int room_count = 0;

   for (int i = 0; i < height; i++){
      for (int j = 0; j < width; j++){

         if (room[i][j] == '.'){
            rooms[room_count] = room_size(room, i, j, '.', '+');
            room_count++;
         }
      }
   }

   sort(rooms, room_count);

   std::cout << room_count<< std::endl;
   for (int i = 0; i < room_count; i++){
      std::cout << rooms[i] << " ";
   }
   std::cout << std::endl;
}

int room_size(char room[100][100], int x, int y, char point, char plus){

   int size = 0;

   if (room[x][y] != point){
      return 0;
   }
   else{
      room[x][y] = plus;
      size++;

      size += room_size(room, x - 1, y, point, plus);
      size += room_size(room, x + 1, y, point, plus);
      size += room_size(room, x, y - 1, point, plus);
      size += room_size(room, x, y + 1, point, plus);
   }
   return size;
}

void sort(int numbers[100], int count){
   for (int i = 0; i < count; i++){
      for (int j = 0; j < count - 1; j++){
         if (numbers[j] < numbers[j + 1]){
            int temp = numbers[j];
            numbers[j] = numbers[j + 1];
            numbers[j + 1] = temp;
         }
      }
   }
}