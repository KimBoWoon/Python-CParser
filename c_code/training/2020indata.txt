
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int binarySearch(int a[], int left, int right, int value,int m)
{
	int mid;
	if (left > right)
	{
		if(abs(a[left]-value)<abs(a[right]-value))
			return left;
		else
			return right;
	}
	else
	{
		mid = (left+right)/2;
		if (a[mid] == value){
			if(a[mid]!=m)
				return mid;
			else
			{
				if(abs(a[left]-value)<=abs(a[right]-value))
					return left;
				else
					return right;
			}
		}
		else if (a[mid] > value)
			return binarySearch(a, left, mid-1, value,m);
		else
			return binarySearch(a, mid+1, right, value,m);
	}
}

int intcmp(const void*v1, const void *v2){
	return (*(int*)v1-*(int*)v2);
}

void twonum(int*arr, int target,int length)
{
	int m,sum,cnt=0,min;
	min=abs(target-(arr[0]+arr[1]));
	qsort(arr,length,sizeof(int),intcmp);
	
	for(m=0;m<length-1;m++)
	{	
		int o = target - arr[m];
		int k = binarySearch(arr,m+2,length-1,o,m);
		int sub =  abs(target-(arr[m]+arr[k]));

		if(m >=k)
			continue;
		
		if(min > sub){
			min=sub;
			cnt=1;
		}
		else if(min==sub)
			cnt++;	
		if(arr[m]>0 && sub>min)
			break;

		if(arr[m]<0)
		{
			int r=k;

			k = binarySearch(arr,r+2,length-1,o,m);
			sub = abs(target-(arr[m]+arr[k]));
			if(m>=k)
				continue;
			if(min > sub){
				min = sub;
				cnt = 1;
			}
			else if(min == sub && r!=k)
				cnt++;	
		}
	}
	printf("%d\n",cnt);
}




void main(void)
{
	FILE *file;
	int i,test,length,target;
	file=fopen("input.txt","r"); 
	if(file==NULL) exit(1);
	
	fscanf(file,"%d", &test); 

	for(i=0; i<test; i++)
	{
		int *arr,j;
		fscanf(file,"%d %d", &length,&target); 
		arr = (int*)malloc(sizeof(int)*(length)); 
		for(j=0;j<length;j++)
		{
			fscanf(file,"%d",&arr[j]);
		}
		twonum(arr,target,length);
	}
	fclose(file); 
}