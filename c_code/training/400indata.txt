#include <cstdio>
#include <algorithm>
#include <functional>

#define ARR_MAX 100
#define WALL '+'
#define BLANK '.'
#define CHECK 'x'

using namespace std;

int floodFill(char map[][ARR_MAX + 1], int i, int j) {
	if (map[i][j] == WALL || map[i][j] == CHECK)
		return 0;
	else if (map[i][j] == BLANK) {
		map[i][j] = CHECK;

		return 1 + floodFill(map, i - 1, j) 
			+ floodFill(map, i + 1, j)
			+ floodFill(map, i, j - 1)
			+ floodFill(map, i, j + 1);
	}
}

int main(void) {
	FILE * fp = fopen("input.txt", "r");

	int nCase; 
	fscanf(fp, "%d", &nCase);

	while (nCase--) {
		int row, col;
		fscanf(fp, "%d %d", &col, &row);

		char map[ARR_MAX][ARR_MAX + 1];
		for (int i = 0; i < row; i++) {
			fscanf(fp, "%s", map[i]);
		}

		int nRoom = 0, area[ARR_MAX] = { 0 };

		for (int i = 1; i < row - 1; i++) {
			for (int j = 1; j < col - 1; j++) {
				if (map[i][j] == BLANK) {
					area[nRoom++] = floodFill(map, i, j);
				}
			}
		}

		std::sort(area, area + nRoom, std::greater<int>());
		
		printf("%d\n", nRoom);
		for (int i = 0; i < nRoom; i++) {
			printf("%d ", area[i]);
		}
		printf("\n");
	}

	fclose(fp);
	return 0;
}
