#include <iostream>
#include <fstream>
#include <cmath>

using namespace std;
int main()
{
	ifstream instream;
	instream.open("input.txt");
	if (instream.fail())
	{
		cerr << "input file open failed";
	}
	int i = 0;
	int testcase, m, n, a, p, b, q;
	double win[1000] = { 0 };
	double lose[1000] = { 0 };
	double expect[1000] = { 0 };
	double max = 0;
	double min = 1000;
	int max1;
	int min1;
	instream >> testcase;
	for (int j = 0; j < testcase; j++)
	{
		instream >> n >> m;
		for (int k = 0; k < m; k++)
		{
			instream >> a >> b >> p >> q;
				win[a] += p;
				lose[a] += q;
				win[b] += q;
				lose[b] += p;
			
		}
			for (i = 0; i < 1000; i++)
			{
				if ((win[i] * win[i] + lose[i] * lose[i]) != 0)
					expect[i] = win[i] * win[i] / (win[i] * win[i] + lose[i] * lose[i]);
			}
			for (i = 0; i < 1000; i++)
			{
				if (expect[i] >= max)
					max = expect[i];
				if (expect[i] <= min&& expect[i] != 0)
					min = expect[i];
			}
			max *= 1000;
			min *= 1000;
			cout << floor(max) << endl;
			cout << floor(min) << endl;
			max = 0;
			min = 1000;
			for (i = 0; i < 1000; i++)
			{
				win[i] = 0;
				lose[i] = 0;
				expect[i] = 0;
			}
		
	}
	return 0;
}