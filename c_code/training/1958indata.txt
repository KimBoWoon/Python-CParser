#include <stdio.h>
#include <stdlib.h>

void pythagorean(int teams, int *teamGt, int *teamLs);

int main()
{
	FILE *fp = fopen("input.txt", "r");
	int T = 0;
	fscanf(fp, "%d", &T);

	while (T--)
	{
		int teams, matches, i;
		int *teamGt, *teamLs;
		fscanf(fp, "%d %d", &teams, &matches);

		teamGt = (int*)malloc(sizeof(int) * (teams + 1));
		teamLs = (int*)malloc(sizeof(int) * (teams + 1));

		for (i = 0; i < teams + 1; i++)
		{ 
			teamGt[i] = 0;
			teamLs[i] = 0;
		}

		int teamA, teamB;
		int aScore, bScore;
		for (i = 0; i < matches; i++)
		{
			fscanf(fp, "%d %d %d %d", &teamA, &teamB, &aScore, &bScore);

			teamGt[teamA] += aScore;
			teamLs[teamA] += bScore;

			teamGt[teamB] += bScore;
			teamLs[teamB] += aScore;
		}
		pythagorean(teams, teamGt, teamLs);
	}
	return 0;
}

void pythagorean(int teams, int *teamGt, int *teamLs)
{
	int results = 0, i;
	int maxis = 0, minis = 99999999;
	for (i = 1; i <= teams; i++)
	{
		results = ((teamGt[i] * teamGt[i])) * 1000;
		results = results / ((teamGt[i] * teamGt[i]) + (teamLs[i] * teamLs[i]));
		if (maxis < results)
			maxis = results;
		if (minis > results)
			minis = results;
	}
	printf("%d\n%d\n", maxis, minis);
}