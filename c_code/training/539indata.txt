#include <iostream>
#include <fstream>

void init_alph(char alph[27], int char_count);
void find_string(char alph[27], int kind_count, int char_count, int index);
void resetting(char alph[27], int index, int char_count);
int factorial(int number);

int main(void){

	std::ifstream inFile("input.txt");
	if (inFile.fail()){
		std::cout << "not file" << std::endl;
		return 0;
	}

	int testCases = 0;
	inFile >> testCases;

	
	int char_count = 0;
	int index = 0;

	for (int i = 0; i < testCases; i++){
		inFile >> char_count >> index;

		char alph[27] = { ' ' };

		init_alph(alph, char_count);
		if (char_count == 1 && index == 1){
			std::cout << 'a' << std::endl;
		}
		else{
			find_string(alph, factorial(char_count - 1), char_count, index - 1);
		}
		

	}

	return 0;
}

void init_alph(char alph[27], int char_count){
	for (int i = 0; i < char_count; i++){
		alph[i] = 97 + i;
	}
}

void find_string(char alph[27], int kind_count, int char_count, int index){
	if (kind_count == 1){
		if (index % 2 == 0){
			std::cout << alph[0] << alph[1] << std::endl;
		}
		else{
			std::cout << alph[1] << alph[0] << std::endl;
		}
	}
	else{
		std::cout << alph[index / kind_count];
		char_count--;
		resetting(alph, index / kind_count, char_count);

		index = index % kind_count;
		find_string(alph, factorial(char_count - 1), char_count, index);
	}
}

int factorial(int number){

	if (number < 0){
		return -1;
	}
	else if (number == 1 || number == 0){
		return 1;
	}
	else{
		return number * factorial(number - 1);
	}
}

void resetting(char alph[27], int index, int char_count){
	for (int i = index; i < char_count; i++){
		alph[i] = alph[i + 1];
	}
	alph[char_count] = ' ';
}