
#include <iostream>
#include <fstream>
using namespace std;

int getGcd(int n1, int n2){
    if(n2==0)
        return n1;
    else
        getGcd(n2, n1 % n2);
}

int main(){
    ifstream inStream;
    inStream.open("input.txt");
    int test_case;
    inStream >> test_case;

    for(int i=0; i<test_case; i++){
        int f1_d, f1_n, f2_d, f2_n;
        inStream >> f1_d >> f1_n >> f2_d >> f2_n;
        
        if(f1_d==0 and f2_d==0){
            cout << "0 0" << endl;
            break;
        }
        else if(f1_d==0){
            cout << f2_d << " " << f2_n << endl;
            break;
        }
        else if(f2_d==0){
            cout << f1_d << " " << f1_n << endl;
            break;
        }        

        int lcmOfNumerator = (f1_n * f2_n) / getGcd(f1_n, f2_n);
    
        if(f1_n != lcmOfNumerator){
            int multiNum = lcmOfNumerator / f1_n;
            f1_d *= multiNum;
            f1_n *= multiNum;
        }

        if(f2_n != lcmOfNumerator){
            int multiNum = lcmOfNumerator / f2_n;
            f2_d *= multiNum;
            f2_n *= multiNum;
        }

        int f3_d, f3_n;
        f3_d = f1_d + f2_d;
        f3_n = f1_n;

        int gcdOfFraction = getGcd(f3_d, f3_n);
        
        if(gcdOfFraction != 1){
            f3_d /= gcdOfFraction;
            f3_n /= gcdOfFraction;
        }      
        
        cout << f3_d << " " << f3_n << " " << endl;
    }
    inStream.close();
}
