 


#include <stdio.h>
#include <stdlib.h>

typedef struct point{
    long int x;
    long int y;
}point;



int compareX(const void* argv1, const void* argv2);

int compareYA(const void* argv1, const void* argv2);

int compareYD(const void* argv1, const void* argv2);
int main()
{
    int T;
    FILE *fp;
    fp =fopen("input.txt","r");
    fscanf(fp,"%d",&T);
    while(T--)
    {
        long int n,number[10];
        struct point *arr;
        int m;
        long int i,y_value,index=0,cnt=0,flag=0;
        fscanf(fp,"%ld",&n);
        arr = (struct point*)malloc(sizeof(struct point)*(n+1));
        arr[0].x = -1; arr[0].y = 0;
        for(i=1;i<=n;i++)
        {
            fscanf(fp,"%ld %ld",&(arr[i].x),&(arr[i].y));    
        }
        fscanf(fp,"%d",&m);
        for(i=0;i<m;i++)
        {
            fscanf(fp,"%ld",&number[i]);
        }
        qsort(arr,n+1,sizeof(struct point),compareX);
        
        for(i=1;i<=n;i++)
        {
            
            if(i != n && arr[i].x == arr[i+1].x)
            {
                cnt++;
                if(cnt == 1)
                {
                    index = i;
                    y_value = arr[i-1].y;
                }
                
                if(y_value > arr[i].y)
                    flag = -1;
                
                else if(y_value < arr[i].y)
                    flag = 1;
            }
            
            else if(cnt > 0)
            {
                if(flag == 0)
                {
                    if(y_value > arr[i].y) flag = -1;
                    else if(y_value < arr[i].y) flag = 1;
                }
                
                if(flag == -1)
                    qsort(arr+index,cnt+1,sizeof(struct point),compareYD);
                else if(flag == 1)
                    qsort(arr+index,cnt+1,sizeof(struct point),compareYA);
                cnt = 0;
                index = 0;
                flag = 0;
            }
            
        }
        for(i=0;i<m;i++)
        {
            printf("%ld %ld\n",arr[number[i]].x,arr[number[i]].y);
        }
        
        free(arr);
    }
    fclose(fp);
    return 0;
}
int compareX(const void* argv1, const void* argv2)
{
    long int v1,v2;
    v1 = ((struct point*)argv1)->x;
    v2 = ((struct point*)argv2)->x;
    if(v1 > v2) return 1;
    else if(v1 == v2) return 0;
    else return -1;
}
int compareYD(const void* argv1, const void* argv2)
{
    long int v1,v2;
    v1 = ((struct point*)argv1)->y;
    v2 = ((struct point*)argv2)->y;
    if(v1 < v2) return 1;
    else if(v1 == v2) return 0;
    else return -1;
}
int compareYA(const void* argv1, const void* argv2)
{
    long int v1,v2;
    v1 = ((struct point*)argv1)->y;
    v2 = ((struct point*)argv2)->y;
    if(v1 > v2) return 1;
    else if(v1 == v2) return 0;
    else return -1;
}
