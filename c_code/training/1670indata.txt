
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX 100001

typedef struct position {
	int x, y, n;
} Pos;

int compareValue(const void *x, const void *y) {
	return ((*(Pos *)x).x != (*(Pos *)y).x) ?
		(*(Pos *)x).x - (*(Pos *)y).x :
		(*(Pos *)x).y - (*(Pos *)y).y;
}

int compareNum(const void *x, const void *y) {
	return (*(Pos *)x).n - (*(Pos *)y).n;
}

Pos pos[MAX];

int main() {
	
	FILE* file;

	file = fopen("input.txt", "r");
	int testcases;
	fscanf(file, "%d", &testcases);

	int test;
	for (test = 0; test < testcases; test++) {
		int numOfcafe, i, QAnum, QAcafeNum;

		fscanf(file, "%d", &numOfcafe);
		
		memset(pos, 0, sizeof(Pos) * MAX);

		for (i = 0; i < numOfcafe; i++)
			fscanf(file, "%d %d", &pos[i].x, &pos[i].y);

		qsort(pos, numOfcafe, sizeof(Pos), compareValue);

		int preY = 0, n = 1, x, y;
		for (i = 0; i < numOfcafe; i++) {
			int end = i;
			for (x = i + 1; x <= numOfcafe; x++) {
				if (pos[i].x == pos[x].x)
					end = x;
				else
					break;
			}
			if (pos[i].y >= preY) {
				for (y = i; y <= end; y++)
					pos[y].n = n++;
				preY = pos[end].y;
			}
			else {
				for (y = end; y >= i; y--)
					pos[y].n = n++;
				preY = pos[i].y;
			}
			i = end;
		}

		qsort(pos, numOfcafe, sizeof(Pos), compareNum);

		fscanf(file, "%d", &QAnum);
		for (i = 0; i < QAnum; i++) {
			fscanf(file, "%d", &QAcafeNum);
			printf("%d %d\n", pos[QAcafeNum - 1].x, pos[QAcafeNum - 1].y);
		}
	}
}