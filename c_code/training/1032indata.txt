#include<iostream>
#include<fstream>
#define MAX 1000

using namespace std;

int a[15];
int stack[1000][15];
int level;

bool checkItOut(int n){
	for (int i = 0; i < n; i++){
		if (a[i] != 0)
			return false;
	}
	return true;
}

bool checkLoop(int n){
	bool allClear = true;

	for (int i = 0; i < level; i++){
		allClear = true;
		for (int j = 0; j < n; j++){
			if (stack[i][j] != a[j])
				allClear = false;
		}
		if (allClear)
			return true;
	}

	return false;
}

int calcSub(int a, int b){
	int c = a - b;
	if (c < 0)
		return c*-1;
	else
		return c;
}

void nextStep(int n){
	int temp[15];
	for (int i = 0; i < n; i++){
		stack[level][i] = a[i];
	}level++;

	for (int i = 0; i < n; i++){
		if (i == n - 1){
			temp[i] = calcSub(a[i], a[0]);
		}
		else
			temp[i] = calcSub(a[i], a[i + 1]);
	}
	for (int i = 0; i < n; i++){
		a[i] = temp[i];
	}
}

void printA(int n){
	for (int i = 0; i < n; i++){
		cout << a[i] << " ";
	}cout << endl;
}

int main(){

	int testCase,n;
	int life;
	bool flag;

	ifstream file;
	file.open("input.txt");

	file >> testCase;

	for (int tCase = 0; tCase < testCase; tCase++){
		file >> n;
		for (int i = 0; i < n; i++)
			file >> a[i];

		life = MAX;
		level = 0;
		flag = true;
		while (life--){
			nextStep(n);
			if (checkItOut(n)){
				cout << "ZERO" << endl;
				flag = false;
				break;
			}
			if (checkLoop(n)){
				flag = true;
				break;
			}
		}
		if (flag) cout << "LOOP" << endl;
	}
}