




#include<iostream>
#include<fstream>


int pythagoreanE(int a, int b);
int main(int argc, char* argv[]){
	
	std:: ifstream is;
	is.open("input.txt"); 
	
	int times; 
	is >> times;

	for(int i = 0; i < times; i++){

		int n, m; 
		is >> n >> m;

		int **result = new int *[n+1];
		for(int i = 0; i < n+1; i++)
			result[i] = new int[2];

		for(int i = 1; i < n+1; i ++)
			result[i][0] = result[i][1] = 0;

		int record [4] = {0};
		for(int j = 0; j < m; j ++){

			is >> record[0] >> record[1] >> record[2] >> record[3];
			
			result[record[0]][0] += record[2];
			result[record[1]][0] += record[3];

			result[record[0]][1] += record[3];
			result[record[1]][1] += record[2];


		}
	

		int min = 9999999, max = 0;
		int t;
		for(int j = 1; j < n+1; j++){
			t = pythagoreanE(result[j][0],result[j][1]);
			
			if(min > t)
				min = t;
			if(max < t)
				max = t;

		}

		std::cout<< max << std::endl << min << std::endl;
	}
} 

int pythagoreanE(int a, int b){

	return ((double)(a*a)/(double)((a*a)+(b*b)))*1000;

}