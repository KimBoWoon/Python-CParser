#include<iostream>
#include<fstream>
#include<cmath>

using namespace std;

typedef struct score {double S,A; double W;} Score;

void init(Score *team,int n)  
{
	for(int i=1;i<=n;i++)
	{
		team[i].A=0;
		team[i].S=0;
	}
}

void print(Score *team,int n)  
{
	double max,min;

	max = min = team[1].W;

	for(int i=2;i<=n;i++)
	{
		if(max<team[i].W)
			max = team[i].W;
		else if(min>team[i].W)
			min = team[i].W;
	}

	cout<<floor(max*1000)<<endl<<floor(min*1000)<<endl;
}

void computeW(Score *team, int n) 
{
	for(int i=1;i<=n;i++)
	{
		team[i].W=pow(team[i].S,2)/(pow(team[i].S,2)+pow(team[i].A,2));
	}

	print(team,n);
}

void expactation(int game[][4],int m, int n) 
{
		Score *team = new Score[n+1];
		init(team,n); 
		
		for(int i=0;i<m;i++)
		{
			team[game[i][0]].S += game[i][2];
			team[game[i][1]].S += game[i][3];
			
			team[game[i][0]].A += game[i][3];
			team[game[i][1]].A += game[i][2];
		}

		computeW(team,n);
}

int main()
{
	int testcase;
	ifstream instream("input.txt",ios::in);
	instream>>testcase;

	for(int i=0;i<testcase;i++)
	{
		int n,m;
		instream>>n>>m;
		int game[1000][4]; 
		
		for(int k=0;k<m;k++)
			for(int j=0;j<4;j++)
				instream>>game[k][j];

		expactation(game,m,n);
	}

	return 0;
}
