#include <iostream>
#include <fstream>
#include <cmath>

int fac(int n)
{
	if (n <= 1)
		return 1;
	else
		return n*fac(n - 1);
}

void jsort(char* en,int* size)
{
	int i = 0;
	for (i = 0; i < *size && en[i] != 'x'; i++);
	for (; i < (*size)-1; i++)
		en[i] = en[i + 1];
	en[(*size) - 1] = ' ';
	(*size) -= 1;
}

void permu(int *f, int *n, char* en, int* k)
{
	int nf = *f / *n;
	int nn = *n;
	int nk = *k;
	int size = *n;
	while (nk > 2 || size>1)
	{
		int count = 0;
		while (nk > nf)
		{
			nk -= nf;
			count++;
		}
		std::cout << en[count];
		en[count] = 'x';
		jsort(en, &size);
		nn--;
		nf = nf / nn;
	}
	char a = en[1];
	if (nf == 1&&(en[1]!=' '&&en[1]>0))
		std::cout << en[0] << en[1];
	else if (en[1] != ' '&&en[1]>0)
		std::cout << en[1] << en[0];
	else
		std::cout << en[0];
}


int main()
{
	std::ifstream file("input.txt");
	int testCase = 0,n=0,k=0,f=0;

	file >> testCase;
	while (testCase--)
	{
		file >> n >> k;
		char *en = new char[n];
		for (int i = 0; i < n; i++)
			en[i] = 'a' + i;
		f = fac(n);
		permu(&f, &n, en, &k);
		std::cout << std::endl;
	}
}