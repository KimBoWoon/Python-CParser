#include <iostream>
#include <fstream>

using namespace std;


void FindRoom(char (*index)[100], int i , int j);
void recurse(char (*index)[100], int i , int j, int sum);
 void my_sort(int *number, int size);

int room_no[100];

int main()
{
	ifstream infile;

	infile.open("input.txt");
	
	int numTestCases = 0;
	char index[100][100];
	
	infile >> numTestCases;
	
	
	while(numTestCases--)
	{
		int i , j;
		infile >> i >> j;
		
		for(int a = 0 ; a < j ; a++){
			for(int b = 0 ; b < i ; b++){
				infile >> index[a][b];
			}
			
	
		}
		room_no[0]=0;
		FindRoom(index,i,j);

	}

	
	return 0;
}


void FindRoom(char (*index)[100], int i , int j)
{
	
	
	 
	int sum = 0 ;
	
	
	int a, b, c;
	for( a = 0 ; a < j; a++)
	{
		for( b = 0 ; b < i ; b++)
		{
			if(index[a][b] == '.'){
				
				sum++;
				
				room_no[sum] = 0;	 
			 recurse(index,a, b , sum);
				
				
				
			}
		}
	}

 my_sort(room_no, sum+1);
	cout<< sum << endl;
	for(int ia = 0 ; ia < sum ; ia++)	
		cout<<room_no[ia]<<" ";
		cout<<endl;
	
}
void recurse(char (*index)[100], int a , int b, int i)
{ 
	if( index[a][b] != '+'){
	room_no[i]++;

	index[a][b] = '+';
	
	
	 recurse(index,a,b+1,i);
	recurse(index,a+1,b,i) ;
	 recurse(index,a,b-1,i);
	 recurse(index,a-1,b,i);
	
	}
	

}

 void my_sort(int *number, int size)
{
     int i=0, j=0, temp=0;
     for(j=0;j<size;j++)
     {
          for(i=0;i<size-1;i++)
          {
               if(number[i]<=number[i+1])
               {
                    temp=number[i];
                    number[i]=number[i+1];
                    number[i+1]=temp;
               }
          }
     }
}