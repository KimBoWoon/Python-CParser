
#include <stdio.h>
#include <stdlib.h>
#define MAXSIZE 100000



typedef struct Point { int x, y; }point;

point arr[MAXSIZE+1];
int before;

void printArr(FILE *fin) {
	int testCases, test;
	fscanf(fin, "%d", &testCases);
	while(testCases-->0) {
		fscanf(fin, "%d", &test);
		printf("%d %d\n", arr[test].x, arr[test].y);
	}
}


int cmpfunc(point *a, point *b) 
{ return a->x - b->x; }


int cmpfunc_y(point *a, point *b)
{ return abs(arr[before].y - a->y) - abs(arr[before].y - b->y); }


void monotoneSort(int size) {
	int i, flag = 0;
	before = 0;
	for(i=1; i<=size; i++) {	
		if(arr[i].x == arr[i+1].x) {
			if (!flag) before = i-1;
			flag = 1;
			continue;	
		} 
		if (flag) {
			qsort(arr+before+1, i-before, sizeof(point), (void *)cmpfunc_y);
			flag = 0;
		}
	}
}

void MonotoneWalkway(FILE *fin) {
	int i, size, answers, ans;

	fscanf(fin, "%d", &size);

	for(i=1; i<=size; i++)
		fscanf(fin, "%d %d", &arr[i].x, &arr[i].y);
	
	arr[0].x = 0; arr[0].y = 0;
	arr[size+1].x = -100001; arr[size+1].y = -100001;

	qsort(arr+1, size, sizeof(point), (void *)cmpfunc);

	monotoneSort(size);

	printArr(fin);
}

int main() {
	int i, testCases, cases;
	FILE *fin = fopen("input.txt", "r");

	fscanf(fin, "%d", &testCases);

	for (i=0; i<testCases; i++) 
		MonotoneWalkway(fin);

	fclose(fin);
}
