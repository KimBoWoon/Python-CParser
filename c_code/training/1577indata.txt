#include <stdio.h>
#include <stdlib.h>

#define MAX_M 8
#define MAX_N MAX_M

#define true 1
#define false 0

typedef int Boolean;

typedef struct Point
{
	int y;
	int x;
}Point;

Point dirs[8] = {{-2, -1}, {-2, 1}, {-1, -2}, {-1, 2}, {1, -2}, {1, 2}, {2, -1}, {2, 1}};

Boolean tour(int m, int n, Point pos, Boolean visited[][MAX_N], int label[][MAX_N], int cnt);

int main()
{
	FILE* fileDes;
	int trialNum;
	int i, j, k;

	int m, n;					
	int startY, startX;			

	Boolean visited[MAX_M][MAX_N];	
	int label[MAX_M][MAX_N];		
	Point start;					

	fileDes = fopen("input.txt", "r");

	if(fileDes == NULL)
		exit(1);

	fscanf(fileDes, "%d", &trialNum);

	for(i = 0 ; i < trialNum; i++)
	{
		fscanf(fileDes, "%d %d", &m, &n);
		fscanf(fileDes, "%d %d", &startY, &startX);	

		for(j = 0; j < m; j++)
		{
			for(k = 0; k < n; k++)
			{
				visited[j][k] = false; label[j][k] = 0;
			}
		}

		visited[startY - 1][startX - 1] = true;
		label[startY - 1][startX - 1] = 1;

		start.y = (startY-1); start.x = (startX-1);

		if(tour(m, n, start, visited, label, 1) == true)
		{
			printf("%d\n", true);
			for(j = 0; j < m; j++)
			{
				for(k = 0; k < n; k++)
					printf("%d ", label[j][k]);

				printf("\n");
			}
		}

		else printf("%d\n", false);

	}

	fclose(fileDes);
}

Boolean tour(int m, int n, Point pos, Boolean visited[][MAX_N], int label[][MAX_N], int cnt)
{
	int i;
	Point nextPos;				


	if(cnt == (m*n)) return true;


	for(i = 0; i < 8; i++)
	{

		nextPos.y = pos.y + dirs[i].y;
		nextPos.x = pos.x + dirs[i].x;

		if(visited[nextPos.y][nextPos.x] == false && (nextPos.y >= 0 && nextPos.y < m) && (nextPos.x >= 0 && nextPos.x < n))
		{
			visited[nextPos.y][nextPos.x] = true;
			label[nextPos.y][nextPos.x] = cnt + 1;

			if(tour(m, n, nextPos, visited, label, cnt+1) == true)
				return true;

			visited[nextPos.y][nextPos.x] = false;
			label[nextPos.y][nextPos.x] = 0;
		}
	}

	return false;
}