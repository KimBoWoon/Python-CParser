#include<iostream>
#include<fstream>
using namespace std;

typedef struct p{
	int x;
	int y;
}Point;

Point dir[8] = { { 1, -2 }, { 2, -1 }, { 2, 1 }, { 1, 2 }, { -1, 2 }, { -2, 1 }, { -2, -1 }, { -1, -2 } };
bool chess[9][9];
int path[9][9];

bool tour(int r, int c, Point pos, int cnt){
	Point next;
	if (cnt >= r*c)
		return true;
	for (int i = 0; i < 8; i++){
		next.x = pos.x + dir[i].x;
		next.y = pos.y + dir[i].y;
		if (!chess[next.y][next.x] && next.x > 0 && next.x <= c && next.y > 0 && next.y <= r){
			chess[next.y][next.x] = true;
			path[next.y][next.x] = cnt + 1;
			if (tour(r, c, next, cnt + 1))
				return true;
			chess[next.y][next.x] = false;
		}
	}
	return false;
}

int main(){
	ifstream File;
	int numCase = 0;
	Point p;

	File.open("input.txt");
	File >> numCase;
	while (numCase--){
		int r, c;
		File >> r >> c;
		File >> p.y >> p.x;
		for (int i = 0; i <= r; i++)
			for (int j = 0; j <= c; j++)
				chess[i][j] = false;


		chess[p.y][p.x] = true;
		path[p.y][p.x] = 1;

		if (tour(r, c, p, 1)){
			cout << 1 << endl;
			for (int i = 1; i <= r; i++){
				for (int j = 1; j <= c; j++){
					cout << path[i][j] << ' ';
				}
				cout << endl;
			}
		}
		else
			cout << 0 << endl;
	}
	File.close();
	return 0;
}