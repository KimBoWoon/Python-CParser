#include <iostream>
#include <fstream>
#include <algorithm>
using namespace std;

int alice[1001], com[1001];
int total[1001][1001];

int compute(int begin, int end){
	if (begin > end) return 0;
	if (begin == end) return alice[begin];
	int &count = total[begin][end];
	if (count >= 0) return count;
	count = max(com[end] - com[begin - 1] - compute(begin + 1, end), com[end] - com[begin - 1] - compute(begin, end - 1));
	return count;
}

int main() {
	ifstream file;
	int cases;
	file.open("input.txt");
	file >> cases;
	while (cases--) {
		int cardCount;
		file >> cardCount;

		for (int i = 1; i <= cardCount; i++){
			file >> alice[i];
			com[i] = com[i - 1] + alice[i];
		}

		for (int i = 1; i <= cardCount; i++){
			for (int j = 1; j <= cardCount; j++){
				total[i][j] = -1;
			}
		}

		cout << compute(1, cardCount) << endl;
		


	}
	file.close();
	return 0;
}