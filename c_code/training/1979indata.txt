#include <stdio.h>
#include <stdlib.h>

int compare(const void *num, const void *num1); 
void freenum(int *numArr); 

void main(void)
{
	FILE *inFile;
	int TestCases, numK, sizeNum, i, j; 
	int *numArr; 

	inFile = fopen("input.txt", "r");
	if (inFile == NULL) exit(1);

	fscanf(inFile, "%d", &TestCases); 

	while (TestCases--) 
	{
		int numOfpair = 0, interval = 0, distance = 0, distance2 = 0, lastNum = 0;	
		fscanf(inFile, "%d %d", &sizeNum, &numK); 
		numArr = (int*)malloc(sizeof(int)*sizeNum); 

		for (i = 0; i<sizeNum; i++) 
			fscanf(inFile, "%d", &*(numArr + i));

		qsort(numArr, sizeNum, sizeof(int), compare); 
		interval = abs(numArr[0] + numArr[sizeNum - 1] - numK); 

		lastNum = sizeNum - 1; 
		for (i = 0; i<lastNum; i++) 
		{
			for (j = lastNum; j>i; j--) 
			{
				distance = abs(numArr[i] + numArr[j] - numK); 
				if (distance<interval) 
				{
					interval = distance; 
					numOfpair = 1;         
				}
				else if (distance == interval) 
				{
					numOfpair++;
				}
				else if (distance2 <= distance && j != lastNum) 
					break;
				distance2 = distance; 

			}
			if (numArr[i] + numArr[lastNum - 1] >numK) 
			{
				lastNum--;  
			}
		}
		printf("%d\n", numOfpair); 
	}
	freenum(numArr); 
}

int compare(const void *num, const void *num1) 
{
	return *(int*)num - *(int*)num1; 
}

void freenum(int *numArr) 
{
	free(numArr);
}