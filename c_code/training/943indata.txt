#include <iostream>
#include <fstream>
#include <cstdlib>
#include <vector>
#include <algorithm>
#include <cstring>

using namespace std;

vector<int> A;

const int MAX_N = 1001;
int arr[MAX_N][MAX_N];

int cardGame(int left, int right);

int main() {

	ifstream instream;
	int numTestCases;

	instream.open("input.txt");
	if(instream.fail()) {
		cerr << "Input file opening failed.\n";
		exit(1);
	}

	instream >> numTestCases;

	while(numTestCases--) {

		int cnt;
		instream >> cnt;

		A.clear();
		memset(arr, -1, sizeof(arr));

		for(int i=0; i<cnt; i++) {

			int num;
			instream >> num;
			A.push_back(num);
		}

		cout << cardGame(0, (int)A.size()-1) << endl;
	}
	instream.close();

}


int cardGame(int left, int right) {

	if (left > right) 
		return 0;

	int& ret = arr[left][right];
	
	if (ret != -1) 
		return ret;
	
		
	int c1 = cardGame(left+2, right) + A[left];
	int c2 = cardGame(left+1, right-1) + A[left];
	int c3 = cardGame(left+1, right-1) + A[right];
	int c4 = cardGame(left, right-2) + A[right];

	int cL = min(c1, c2);
	int cR = min(c3, c4);

	return ret = max(cL, cR);
}