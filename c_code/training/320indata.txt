
#include <iostream>
#include <fstream>

#define WALL '+'
#define ROOM '.'
#define SIZE 100

using namespace std;

char ** input_Room(ifstream &ifs, int &row, int &col);	
void delete_Room(char **room, int row);	
void findRooms(char **room, int row, int col, int &numOfRooms);	
void bubble_sort(int roomsArray[SIZE], int length);	
void print_result(int roomsArray[SIZE], int length);	

int main()
{
	ifstream inFile;
	inFile.open("input.txt");

	int numTestCase;	
	inFile >> numTestCase;



	while (numTestCase--)	
	{
		int row, col, length = 0, numOfRooms = 0;
		int roomsArray[SIZE];
		
		char **room = input_Room(inFile, row, col);	
		
		for (int i = 1; i < row - 1; i++)
			for (int j = 1; j < col - 1; j++)
			{
				findRooms(room, i, j, numOfRooms);	
				if (numOfRooms)	
				{
					roomsArray[length++] = numOfRooms;	
					numOfRooms = 0;	
				}
			}

		bubble_sort(roomsArray, length);	
		print_result(roomsArray, length);	
					
		delete_Room(room, row);
	}

	inFile.close();
	return 0;
}

char ** input_Room(ifstream &ifs, int &row, int &col)
{
	ifs >> col >> row;

	char **room = new char*[row];

	for (int i = 0; i < row; i++)
		room[i] = new char[col];

	for (int i = 0; i < row; i++)
		for (int j = 0; j < col; j++)
			ifs >> room[i][j];	

	return room;
}

void delete_Room(char **room, int row)
{
	for (int i = 0; i < row; i++)
		delete[] room[i];

	delete[] room;
}

void findRooms(char **room, int x, int y, int &numOfRooms)	
{
	if (room[x][y] != ROOM)	
		return;
	else
	{
		room[x][y] = WALL;	
		numOfRooms++;	
		
		findRooms(room, x - 1, y, numOfRooms);
		findRooms(room, x + 1, y, numOfRooms);
		findRooms(room, x, y + 1, numOfRooms);
		findRooms(room, x, y - 1, numOfRooms);
	}
}

void bubble_sort(int roomsArray[SIZE], int length)	
{
	for (int i = 0; i < length - 1; i++)
		for (int j = 0; j < length - 1 - i; j++)
		{
			if (roomsArray[j] < roomsArray[j + 1])
			{
				int temp = roomsArray[j];
				roomsArray[j] = roomsArray[j + 1];
				roomsArray[j + 1] = temp;
			}
		}
}

void print_result(int roomsArray[SIZE], int length)
{
	cout << length << endl;

	for (int i = 0; i < length; i++)
		cout << roomsArray[i] << " ";

	cout << endl;
}
