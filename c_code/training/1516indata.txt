#include <stdio.h>
#include <stdlib.h>
#define MAXSIZE 9
#define MARK 1
#define UNMARK 0

typedef struct Point { int x, y; } point;
point direction[8] = { { 1, -2 }, { 2, -1 }, { 2, 1 }, { 1, 2 }, { -1, 2 }, { -2, 1 }, { -2, -1 }, { -1, -2 } };
int board[MAXSIZE][MAXSIZE], path[MAXSIZE][MAXSIZE];

void printTour(int m, int n)
{
	int i, j;
	for (i = 0; i < m; i++)
	{
		for (j = 0; j < n; j++) printf("%d ", path[i][j]);
		printf("\n");
	}
}
int knightTour(int m, int n, point pos, int counter)
{
	int i = 0;
	point next;
	if (counter == m * n)
		return 1;
	for (i = 0; i < 8; i++)
	{
		next.x = pos.x - 1 + direction[i].x;
		next.y = pos.y - 1 + direction[i].y;
		if (next.x >= 0 && next.x < n && next.y >= 0 && next.y < m && board[next.y][next.x] != MARK)
		{
			board[next.y][next.x] = MARK;
			path[next.y][next.x] = counter + 1;
			next.x++;
			next.y++;
			if (knightTour(m, n, next, counter + 1))
				return 1;
			board[next.y - 1][next.x - 1] = UNMARK;
		}
	}
	return 0;
}
int main()
{
	FILE *fp = fopen("input.txt", "r");
	if (fp == NULL) exit(1);
	int i, j, m, n, testcase;
	point start;
	fscanf(fp,"%d",&testcase);

	while (testcase--)
	{
		fscanf(fp, "%d%d", &m, &n); 
		fscanf(fp,"%d%d",&start.y,&start.x);
		
		for (i = 0; i < m; i++)
			for (j = 0; j < n; j++)
				board[i][j] = UNMARK;
		board[start.y - 1][start.x - 1] = MARK;
		path[start.y - 1][start.x - 1] = 1;

		if (knightTour(m, n, start, 1))
		{
			printf("1\n");
			printTour(m, n);
		}
		else
		{
			printf("0\n");
		}
	}
	return 0;
}