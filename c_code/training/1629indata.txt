




#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <fstream>
using namespace std;
int A[503];
int D[503][503];
int F[503];
int merge(int s, int e)
{
   for (int i = 1; i <= e - s; i++)
   {
      for (int j = 1; j<e; j++)
      {
         int k = i + j;
         int min = 0;
         int temp = 0;

         if (k <= e){
            for (int p = j; p<k; p++)
            {
               if (p == j && p + 1 == k)
               {
                  temp = D[j][p] + D[p + 1][k];
               }
               else if (p == j && p + 1 != k)
               {
                  temp = F[k] - F[j] + D[j][p] + D[p + 1][k];
               }
               else if (p != j && p + 1 == k)
               {
                  temp = F[k - 1] - F[j - 1] + D[j][p] + D[p + 1][k];

               }
               else{
                  temp = F[k] - F[j - 1] + D[j][p] + D[p + 1][k];
               }

               if (min == 0)
               {
                  min = temp;
               }
               else if (temp<min)
               {
                  min = temp;
               }
            }

            D[j][k] = min;
         }
      }


   }

   return D[s][e];

}

int main() {
	FILE *inFile;
	inFile = fopen("input.txt","r"); 
	if(inFile ==NULL) exit(1);

   int numcases;
   fscanf(inFile,"%d", &numcases);

   for (int i = 0; i<numcases; i++)
   {
      int num;
       fscanf(inFile,"%d", &num);

      for (int j = 1; j <= num; j++)
      {
         fscanf(inFile,"%d", &A[j]);
         F[j] = F[j - 1] + A[j];
      }
      for (int j = 1; j <= num; j++)
      {
         D[j][j] = A[j];
      }
      cout << merge(1, num) << endl;





   }
   return 0;
}