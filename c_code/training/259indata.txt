
#include <iostream>
#include <fstream>

int gcd(int a, int b)
{
	if (b == 0)
		return a;
	else
		return gcd(b, a % b);
}

class Fraction
{
private:
	int denominator;
	int numerator;
public:
	Fraction(const int& n, const int& d) :
			denominator(d), numerator(n)
	{
	}
	friend Fraction operator+(const Fraction& a, const Fraction& b);
	friend std::ostream& operator<<(std::ostream& os, const Fraction& a);
};

std::ostream& operator<<(std::ostream& os, const Fraction& a)
{
	os << a.numerator << " " << a.denominator;
	return os;
}

Fraction operator+(const Fraction& a, const Fraction& b)
{
	int denominator = a.denominator * b.denominator;
	int numerator = a.denominator * b.numerator + a.numerator * b.denominator;
	int g = gcd(denominator, numerator);
	denominator /= g;
	numerator /= g;
	Fraction c(numerator, denominator);
	return c;
}

int main()
{
	std::ifstream input("input.txt");
	if (input.fail())
	{
		std::cerr << "file open err";
	}
	int numCase;
	input >> numCase;

	for ( int i = 0 ; i < numCase ; i++ )
	{
		int an, ad, bn, bd;
		input >> an >> ad >> bn >> bd;
		Fraction a(an, ad);
		Fraction b(bn, bd);
		std::cout << a + b << std::endl;
	}
	return 0;
}
