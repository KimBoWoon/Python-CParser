

#include <iostream>
#include <fstream>
using namespace std;
int isPositive(int posit_int)
{
	return posit_int >= 0 ? posit_int : -(posit_int);
}
int IsPrimeNumber(int num) {
		int cnt = 0;
				
		for(int j = 2; j < num ; j++)
		{
			if((num % j) == 0)
			{
				cnt++;
			}
		}
		if(cnt == 0) return 1;
		else return 0;
}

int goldbach(int n)
{
	int result1 = 0;
	int result2 = 0;
	int final_result1 = 0;
	int final_result2 = 0;
	int flag = 0;
	int PrimeNums[169];
	int start = 0;

	for(int i = 2; i <1000; i++){

		if(IsPrimeNumber(i) == 1)	{PrimeNums[start] = i; start++;}

	}
	for(int i=0; i<169; i++){  
		for(int j=0; j<169; j++){
			if( PrimeNums[i] + PrimeNums[j] > 1000) break;
			if((PrimeNums[i] + PrimeNums[j]) == n) { 
				if(flag == 0){
					final_result1 = PrimeNums[i];
					final_result2 = PrimeNums[j];
					flag++;
				}
				if(isPositive(final_result2-final_result1) > isPositive(PrimeNums[j]-PrimeNums[i]) ){
				final_result1 = PrimeNums[i];
				final_result2 = PrimeNums[j];
				}
			}
		}
	}
	cout << final_result1 << " " << final_result2 << endl;
	return 0;
}

int main()
{
	int numTestCases;
	int testcase;
	
	ifstream inFile;
	inFile.open("input.txt");
	inFile >> numTestCases; 

	if(inFile.is_open() == false) {cout << "파일을 열 수 없습니다" <<endl;}

		for(int i = 0 ; i < numTestCases ; i++) {
			inFile >> testcase;
			goldbach(testcase);
			}
		
	
}