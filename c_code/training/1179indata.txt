#include <stdio.h>

#define TRUE 1
#define FALSE 0
#define MAX 45
#define T(n) (n * (n + 1) / 2)

int eureka_theorem(int x);

int main()
{
	FILE* stream = fopen("input.txt", "r");
	int testCaseNumber = 0;
	int testCases = 0;
	int i = 0;

	if (stream == NULL)
	{
		printf("file error\n");
	}

	fscanf(stream, "%d", &testCaseNumber);

	for (i = 0; i < testCaseNumber; i++)
	{
		fscanf(stream, "%d", &testCases);
		printf("%d\n", eureka_theorem(testCases));
	}

	fclose(stream);
	return 0;
}

int eureka_theorem(int x)
{
	int t = x; 
	int i = 0, j = 0, k = 0;

	for (i = 1; i < MAX; i++)
	{
		for (j = i; j < MAX; j++)
		{
			for (k = j; k < MAX; k++)
			{
				if ( t == ( T(i) + T(j) + T(k) ) )
				{
					return TRUE;
				}
			}
		}
	}
	return FALSE;
}