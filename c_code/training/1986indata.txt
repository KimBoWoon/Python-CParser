

#include<iostream>
#include<fstream>
#include<string>
using namespace std;

int absnum(int num);
void quickSort(int *arr, int left, int right);

int main()
{
	int numOfCase = 0;	
	int target;
	int *arr;
	int numOfStr; 

	ifstream input("input.txt");
	if (input.fail()){
		cout << "파일을 여는 데 실패했습니다." << endl;
	}
	input >> numOfCase;

	for (int i = 0; i < numOfCase; i++){
		int num;
		input >> num;
		input >> target;
		arr = new int[num];
		for (int j = 0; j < num; j++){
			input >> arr[j];
		}

		quickSort(arr, 0, num-1);	
		int start = 0;			
		int end = num - 1;		
		int cnt = 0;
		int min = 1000000000;				

		while (1){
			int sum = arr[start] + arr[end] - target;

			if (absnum(sum) < min){	
				min = absnum(sum);
				cnt = 1;		
			}

			else if (absnum(sum) == min){	
				cnt++;
			}

			if (sum >= 0){	
				end--;
			}
			else{
				start++;
			}
			if (start >= end){
				break;
			}
		}
		cout << cnt << endl;
	}
	input.close();
	return 0;
}
int absnum(int num){
	if (num < 0){
		return -num;
	}
	else{
		return num;
	}
}
void quickSort(int *arr, int left, int right)
{
	int i, j;
	int temp;
	int pivot = arr[left];
	if (left < right)
	{
		i = left;
		j = right + 1; 
		while (i <= j)
		{
			do
				i++;
			while (arr[i] < pivot);  
			do
				j--;
			while (arr[j] > pivot); 
			if (i<j) 
			{
				temp = arr[i];
				arr[i] = arr[j];
				arr[j] = temp;
			}
			else 
				break;
		}
		temp = arr[j];
		arr[j] = arr[left];
		arr[left] = temp;
		quickSort(arr, left, j - 1); 
		quickSort(arr, j + 1, right);
		}
}