#include <iostream>
#include <fstream>
#include <cstdlib>
#define MAX 100000
using namespace std;

typedef struct position{
	int x, y;
}Position;

int compare(const void *a, const void *b) {
	if (((Position *)a)->x != ((Position *)b)->x)
		return ((Position *)a)->x - ((Position *)b)->x;
	return ((Position *)a)->y - ((Position *)b)->y;
}

int Ycompare(const void *a, const void *b) {
	return ((Position *)b)->y - ((Position *)a)->y;
}

int main() {
	fstream file;
	file.open("input.txt");

	int testcase;
	bool com = false;
	int num = 0;
	int printcafe, number,cafenum;

	file >> testcase;

	for(int i=0; i< testcase; i++){
		file >> cafenum;
		
		Position pos[MAX]={{0,0}};

		for (int i = 0; i < cafenum; i++)
			file >> pos[i].x >> pos[i].y;


		qsort(pos, cafenum, sizeof(Position), compare);

		for (int i = 1; i < cafenum; i++){
			if (pos[i-1].x != pos[i].x){
				if (com){
					qsort(&pos[num], i - num, sizeof(Position), Ycompare);
					com = false;
				}

				num = i;
				if (pos[i - 1].y != pos[i].y){
					com = true;
				}
			}
		}

		if (com){
			qsort(&pos[num], cafenum - num, sizeof(Position), Ycompare);
			com = false;
		}

		if (pos[0].y != 0){
			int count = 1;
			for (int i = 1; i < cafenum; i++){
				if (pos[i].x == 0)
					count++;
				else
					break;
			}

			qsort(&pos[0], count, sizeof(Position), Ycompare);
		}



		file >> printcafe;

		for (int i = 0; i < printcafe; i++){

			file >> number;

			cout << pos[number - 1].x << " " << pos[number - 1].y << endl;
		}
	}
	return 0;
}
