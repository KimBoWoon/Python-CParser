

#include <stdio.h>
#include <stdlib.h>

#define MAX 100002

typedef struct {
   int x;
   int y;
} cafe;

short sort = 0;

int compareX(const void *a, const void *b);
int compareY(const void *a, const void *b);

void main(void) {
   FILE *inFile;
   int circle, i;
   int left, right;
   int cafeNum;
   cafe cafe[MAX];
   int lastY = 0;

   inFile = fopen("input.txt", "r");
   fscanf(inFile, "%d", &circle);

   while (circle--){
      fscanf(inFile, "%d", &cafeNum);

      for (i = 0; i < cafeNum; i++){
         fscanf(inFile, "%d %d", &cafe[i].x, &cafe[i].y);
      }

      qsort((void *)cafe, cafeNum, sizeof(cafe[0]), compareX);

      lastY = 0;
      left = right = 0;
      while (right + 1 <= cafeNum){

         if (cafe[left].x == 0) {
            if (cafe[left].x == cafe[right + 1].x && right != cafeNum - 1){
               right++;
            }
            else{
               if (++right - left>1) {
                  if (lastY > cafe[left].y || lastY > cafe[left + 1].y){
                     qsort((void *)(cafe + left), right - left, sizeof(cafe[0]), compareY);
                  }
               }
               lastY = cafe[right - 1].y;

               left = right;
            }
         }
         else {
            if (cafe[left].x == cafe[right + 1].x){
               right++;
            }
            else{
               if (++right - left>1) {
                  if (lastY > cafe[left].y || lastY > cafe[left + 1].y){
                     qsort((void *)(cafe + left), right - left, sizeof(cafe[0]), compareY);
                  }
               }
               lastY = cafe[right - 1].y;

               left = right;
            }
         }
      }

      fscanf(inFile, "%d", &cafeNum);
      for (i = 0; i < cafeNum; i++){
         fscanf(inFile, "%d", &lastY);
         printf("%d %d\n", cafe[lastY - 1].x, cafe[lastY - 1].y);
      }

   }
}

int compareX(const void *a, const void *b)
{
   cafe *ptrA = (cafe *)a;
   cafe *ptrB = (cafe *)b;

   if (ptrA->x < ptrB->x)
      return -1;
   else if (ptrA->x > ptrB->x)
      return 1;
   else if (ptrA->x == ptrB->x) {
      if (ptrA->y < ptrB->y)
         return -1;
      else if (ptrA->y > ptrB->y)
         return 1;
   }
}

int compareY(const void *a, const void *b)
{
   cafe *ptrA = (cafe *)a;
   cafe *ptrB = (cafe *)b;

   if (ptrA->y > ptrB->y)
      return -1;
   else if (ptrA->y < ptrB->y)
      return 1;
}