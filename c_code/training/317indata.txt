
#include <fstream>
#include <iostream>
using namespace std;

int idx[101];

void floodFill(char** fig, int x, int y, char oldColor, char newColor, int *scale){
	if (fig[x][y] != oldColor)
		return;
	else
	{
		fig[x][y] = newColor;
		(*scale)++;
		
		floodFill(fig, x - 1, y, oldColor, newColor, scale);
		floodFill(fig, x + 1, y, oldColor, newColor, scale);
		floodFill(fig, x, y + 1, oldColor, newColor, scale);
		floodFill(fig, x, y - 1, oldColor, newColor, scale);
	}
}

int isEmpty(char** arr, int x, int y){
	int index = 0, scale = 0;

	for (int i = 0; i < x; i++){

		for (int j = 0; j < y; j++){
			if (arr[i][j] == '.'){
				floodFill(arr, i, j, '.', 'a', &scale);
				index++;
				idx[index] = scale;
				scale = 0;
			}
		}
	}

	return index;
}



int main(){

	int caseNum = 0;

	ifstream inputFile("input.txt");

	inputFile >> caseNum;

	for (int i = 0; i < caseNum; i++){
		int row, col;
		char **arr;
		inputFile >> row >> col;

		arr = new char*[col];
		for (int i = 0; i < col; i++)
			arr[i] = new char[row];

		for (int i = 0; i < col; i++)
			for (int j = 0; j < row; j++)
				inputFile >> arr[i][j];

		int index = isEmpty(arr, col, row);
		cout << index << endl;

		int temp;
		for (int i = 1; i <= index; i++){
			for (int j = 1; j < index; j++){
				if (idx[j] < idx[j + 1]){
					temp = idx[j];
					idx[j] = idx[j + 1];
					idx[j + 1] = temp;
				}
			}
		}

		for (int i = 1; i <= index; i++)
			cout << idx[i] << " ";
		cout << endl;
	}

	return 0;
}