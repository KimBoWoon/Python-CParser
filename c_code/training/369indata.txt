






#include<iostream>
#include<fstream>
#include<cstdlib>

using namespace std;

int number = 49;
int cnt = 0;


void searchPeriod(char room[101][101],int x, int y, char oldChar, char newChar) 
{

	if (room[x][y] != oldChar)
		return;
	else
	{
		room[x][y] = number;
		searchPeriod(room, x - 1, y, oldChar, newChar);
		searchPeriod(room, x + 1, y, oldChar, newChar);
		searchPeriod(room, x, y - 1, oldChar, newChar);
		searchPeriod(room, x, y + 1, oldChar, newChar);
	}
	cnt++;
	
}

int intcmp(const void* pa, const void* pb) 
{
	return *(int *)pb - *(int *)pa;
}

int checkRoom(int row, int col, char room[101][101]) 
{
	int num[100] = { 0 };
	int roomCnt = 0;
	for (int i = 1; i < col; i++)
		for (int j = 1; j < row; j++)
		{
			if (room[i][j] == '.') { 
				searchPeriod(room, i, j, '.', number);
				num[number - 49] = cnt; 
				number++;	cnt = 0; roomCnt++;
			}
		}
	cout << roomCnt << endl; 
	qsort(num, roomCnt, sizeof(int), intcmp); 
	for (int i = 0; i < 100; i++) 
		if (num[i]>0)
			cout << num[i] << " ";
	cout << endl;
	return 0;
}


int main()
{
	fstream instream("input.txt", ios::in);
	int testcase;
	int row, col;
	char room[101][101];
	instream >> testcase;

	for (int i = 0; i<testcase; i++)
	{
		instream >> row >> col;
		for (int j = 0; j < col; j++)
			for (int k = 0; k < row; k++)
				instream >> room[j][k];


		checkRoom(row, col, room);
		number = 49;
	
	}
	return 0;
}
