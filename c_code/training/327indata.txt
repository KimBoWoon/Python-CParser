


#include <iostream>
#include <fstream>
using namespace std;
#define MAXROOM 49*98 
int roomCount[MAXROOM];	
void bubbleSort(int roomCount[MAXROOM]); 
void floodFill(char holeRoom[100][101], int x, int y, char space, int label); 
int main(){

	ifstream inFile("input.txt");
	if (inFile.fail()){
		return 0;
	}
	int testCases;
	char holeRoom[100][101];
	inFile >> testCases;
	for (int i = 0; i < testCases; i++)
	{
		int width, height = 0;
		inFile >> width >> height;
		for (int y = 0; y < height; y++){
			for (int x = 0; x < width; x++){
				inFile >> holeRoom[y][x];
			}
		}
		int label = 1;	
		for (int i = 0; i < 100; i++){
			roomCount[i] = 0;
		}
		for (int y = 1; y < height-1; y++){
			for (int x = 1; x < width-1; x++){
				if (holeRoom[y][x]=='.')
				{
					floodFill(holeRoom, x, y, '.', label);
					label++;
				}
			}
		}
		cout << --label << endl;
		bubbleSort(roomCount);
		cout << endl;
		}

}
void bubbleSort(int roomCount[MAXROOM]){ 
	int tmp;
	for (int i = 1; i < MAXROOM-1; i++){
		for (int j = 1; j < MAXROOM-1; j++){
			if (roomCount[j] != 0){	
				if (roomCount[j] < roomCount[j + 1]){
					tmp = roomCount[j];
					roomCount[j] = roomCount[j + 1];
					roomCount[j + 1] = tmp;
				}
			}
			else break;
		}
	}
	for (int i = 1; i < MAXROOM; i++){
		if (roomCount[i] != 0){
			cout << roomCount[i] << " ";
		}
		else break;
	}
}
void floodFill(char holeRoom[100][101], int x, int y, char space, int label){
	if (holeRoom[y][x] != space){		
		return;
	}
	else{
		holeRoom[y][x] = label;			
		roomCount[label] ++;			
		floodFill(holeRoom, x - 1, y, space, label); 
		floodFill(holeRoom, x + 1, y, space, label);
		floodFill(holeRoom, x, y - 1, space, label);
		floodFill(holeRoom, x, y + 1, space, label);
	}
}