#define _CRT_SECURE_NO_WARNINGS

#include <cstdio>
#include <cstdlib>

#define MAX 100000

class Point
{
public:
	int x;
	int y;
};

int compare(const void *a , const void *b){
	if( (*(Point*)a).x < (*(Point*)b).x )		return -1;
	else if( (*(Point*)a).x > (*(Point*)b).x )	return 1;
	else{
		return ( abs((*(Point*)a).y) > abs((*(Point*)b).y) );
	}
}

int compareA(const void *a , const void *b){ 
	return (*(Point*)a).x - (*(Point*)b).x ;
}

int compareB(const void *a , const void *b){ 
	return (*(Point*)a).y - (*(Point*)b).y ;
}

int compareC(const void *a , const void *b){ 
	return (*(Point*)b).y - (*(Point*)a).y ;
}

int compareD(const void *a , const void *b){ 
	return abs((*(Point*)a).y - (*(Point*)b).y) ;
}


int main(void){
	FILE* file;
	file = fopen("input.txt","r");

	int cases, cafe_count;
	fscanf(file, "%d", &cases);
	while(cases--){
		Point point[MAX];
		fscanf(file, "%d",  &cafe_count);
		for(int i=0; i<cafe_count; i++){
			fscanf(file, "%d %d", &point[i].x, &point[i].y);
		}
		qsort(point, cafe_count,sizeof(Point), compare);

		int y, count, dir=0; 
		int i=0,j;
		
		y = point[0].y;
		for( j=0; j<cafe_count && i<cafe_count; ){
			count=0;

			for( i=j+1; i<cafe_count; i++){
				if( point[i-1].x == point[i].x ){
					count++;
					dir = (y>point[i-1].y) ? 2: (y>point[i].y) ? 2:1;
				}
				else{
					if( count!=0){
						if( dir == 2 )		qsort(point+j, count+1, sizeof(Point), compareC);
						else if( dir==1 )	qsort(point+j, count+1, sizeof(Point), compareB);
						
					}
					j=i;
					y = point[i-1].y;
					break;
				}
			}
		}
		if( count!=0){
			if( dir == 2 )		qsort(point+j, count+1, sizeof(Point), compareC);
			else if( dir==1 )	qsort(point+j, count+1, sizeof(Point), compareB);

		}
		
		
		fscanf(file, "%d", &cafe_count);
		for(i=0; i<cafe_count; i++){
			int p;
			fscanf(file, "%d", &p);
			printf("%d %d\n", point[p-1].x,point[p-1].y);
		}
		
	}
	return 0;
}