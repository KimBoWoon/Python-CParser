#include <stdio.h>
#include <stdlib.h>

#define max 101	

void roomSize(char room[][max], int X, int Y, char oldColor, char newColor);
void bubbleSort(int arr[], int size);

int roomsSize=0;

void main()
{
	FILE *f;
	int count;
	int i,j;
	int x,y;
	int x_size, y_size;

	f = fopen("input.txt", "r");
	if(f==NULL) exit(1);

	fscanf(f, "%d", &count);

	for(i=0; i<count; i++)
	{
		char room[max][max];	
		int roomCount=0;		
		int roomsCnt[max] = {0};	

		fscanf(f, "%d %d", &x_size, &y_size);
		for(y=0; y<y_size; y++)
		{
			fscanf(f, "%s", &room[y]);	
			room[y][x_size] = '\0';
		}
		for(y=0; y<y_size; y++)
		{
			for(x=0; x<x_size; x++)
			{
				if(room[y][x] == '.')
				{
					roomCount++;	
					roomSize(room, x, y, '.', '0'+roomCount);	
					roomsCnt[roomCount] = roomsSize;	
				}
				roomsSize = 0;	
			}
		}
		bubbleSort(roomsCnt, roomCount);	
		printf("%d\n", roomCount);	
		for(j=1; j<=roomCount; j++)	
			printf("%d ", roomsCnt[j]);
		printf("\n");
	}
	fclose(f);
}
void roomSize(char fig[][max], int X, int Y, char oldColor, char newColor)
{
	if (fig[Y][X] != oldColor)
		return;
	else
	{
		roomsSize++;	
		fig[Y][X] = newColor;
		roomSize(fig, X-1, Y, oldColor, newColor);
		roomSize(fig, X+1, Y, oldColor, newColor);
		roomSize(fig, X, Y-1, oldColor, newColor);
		roomSize(fig, X, Y+1, oldColor, newColor);
	}
}
void bubbleSort(int arr[], int size)	
{
	int i,j;
	int temp;

	for(i=1; i<=size-1; i++)
	{
		for(j=i+1; j<=size; j++)
		{
			if(arr[i] < arr[j])
			{
				temp = arr[j];
				arr[j] = arr[i];
				arr[i] = temp;
			}
		}
	}
}