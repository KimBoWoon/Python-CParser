#include <iostream>
#include <fstream>

class GoldbachConjecture
{
private:
	int p1, p2;
	bool isItPrimeNumber(const int& num)
	{
		for (int i = 2; i * i <= num; i++)
			if (num % i == 0)
				return false;
		return true;
	}
public:
	GoldbachConjecture(const int& num)
	{
		int i;
		for (i = num/2; i < num - 2; i--)
			if (isItPrimeNumber(i) && isItPrimeNumber(num - i))
				break;
		p2 = num - i;
		p1 = i;
	}
	friend std::ostream& operator<<(std::ostream& os, GoldbachConjecture g);
};
std::ostream& operator<<(std::ostream& os, GoldbachConjecture g)
{
	os << g.p1 << " " << g.p2;
	return os;
}


int main()
{
	std::ifstream input;
	input.open("input.txt");
	if (input.fail())
	{
		std::cerr << "file open err" ;
		return 1;
	}

	int caseNum;
	input >> caseNum;
	for (int i = 0; i < caseNum; i++)
	{
		int num;
		input >> num;
		GoldbachConjecture g(num);
		std::cout << g << std::endl;
	}

	return 0;
}