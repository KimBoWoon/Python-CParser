#include <iostream>
#include <fstream>
using namespace std;
#define MAX 1001
void my_sort(int number[], int size)
{
 int i = 0, j = 0, temp = 0;
 for (j = 0; j<size; j++)
 {
  for (i = 1; i<size; i++)
  {
   if (number[i]> number[i + 1])
   {
    temp = number[i];
    number[i] = number[i + 1];
    number[i + 1] = temp;
   }
  }
 }
 cout << number[size] << endl;
 cout << number[1] << endl;
}
int main()
{
	FILE *in_file;
 int testcases;
 int numOfTeams;
 int numOfGames;
 int a,b,p, q;
 int team_win[MAX] = { 0 };
 int team_lose[MAX] = { 0 };
 int W[MAX] = { 0 };
 in_file = fopen("input.txt", "r");
 fscanf(in_file, "%d", &testcases);

 for (int i = 0; i < testcases; i++)
 {

  fscanf(in_file, "%d %d", &numOfTeams, &numOfGames);
  for (int j = 0; j <= numOfTeams; j++) {
   W[j] = 0;
   team_win[j] = 0;
   team_lose[j] = 0;
  }
  for (int j = 0; j < numOfGames; j++) {
   fscanf(in_file, "%d %d %d %d", &a, &b, &p, &q);
   team_win[a] += p; 
   team_lose[a] += q; 
   team_win[b] += q; 
   team_lose[b] += p; 
  }

  for (int i = 1; i <= numOfTeams; i++)
  {
   W[i] = 1000 * (double)(team_win[i] * team_win[i]) / (double)((team_win[i] * team_win[i]) + (team_lose[i] * team_lose[i]));
   if (team_win[i] == 0 && team_lose[i] == 0) W[i] = 0;
  }
  
  my_sort(W, numOfTeams);
 }
 fclose(in_file);
}
