

#include <iostream>
#include <fstream>
#include <algorithm>

using namespace std;

class Cal_room  
{
    int row,col;  
    char **room;  
    int room_num; 
    int room_size[101]; 

public:
    Cal_room(int row,int col)
    {
        this->row=row; this->col=col; this->room_num=1; 
        for(int i=0; i<101; i++) room_size[i]=0;  
    }
    void input_room(ifstream *file);
    void search_room();
    void floodFill(int r,int c,char old_char,char new_char);
    ~Cal_room(){  for(int i=0; i<row; i++) delete[] room[i];  delete[] room; }  
    
};

void Cal_room::input_room(ifstream *file)  
{
    this->room=new char*[row];

    for(int i=0; i<row; i++)
        room[i]=new char[col];

    for(int i=0; i<row; i++) for(int j=0; j<col; j++) *file>>room[i][j];
   
}

void Cal_room::search_room()
{
    for(int i=1; i<row; i++) for(int j=1; j<col; j++) 
        if(room[i][j]=='.'){ floodFill(i,j,'.',room_num+48); room_num++; }

    
    sort(room_size,room_size+room_num); 

    cout<<room_num-1<<endl; 

    for(int i=room_num-1; i>0; i--) 
        cout<<room_size[i]<<" ";

    cout<<endl;

}

void Cal_room::floodFill(int r,int c,char old_char,char new_char) 
{
    if(room[r][c]!=old_char)
        return;
    else
    {
        room_size[room_num]++;   
        room[r][c]=new_char;

        floodFill(r-1,c,old_char,new_char);
        floodFill(r+1,c,old_char,new_char);
        floodFill(r,c-1,old_char,new_char);
        floodFill(r,c+1,old_char,new_char);
    }

}

int main()
{

    ifstream file;
    
    file.open("input.txt");
    
    if(file.is_open()==false) 
        cout<<"입력파일이 없습니다."<<endl;
    
    else
    {	
        int case_num;
        file>>case_num;
        
        for(int i=0; i<case_num; i++)
        {   
           int row,col;

           file>>col>>row;

           Cal_room room(row,col);  
           room.input_room(&file);
           room.search_room();
        }

    }

        file.close();

}
