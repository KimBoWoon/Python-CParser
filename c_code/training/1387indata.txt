


#include <iostream>
#include <fstream>
#include <cstdlib>
using namespace std;


class Fraction
{
private:
	int child;
	int parent;
public:
	Fraction(int n1, int n2) {
		child = n1;
		parent = n2;
	}
	int gcd(int a, int b);
	void calclulation(Fraction& a,Fraction b);
	int get_child();
	int get_parent();
};

int Fraction::gcd(int a, int b) {
		if(b==0)
		return a;
	else
		return gcd(b,a%b);
}

void Fraction::calclulation(Fraction& a, Fraction b) {
	int x(0),y(0);
	x = a.parent*b.parent;
	y = a.child*b.parent-a.parent*b.child;
	a.parent = x/gcd(x,y);
	a.child = y/gcd(x,y);
}
int Fraction::get_child() {
	return child;
}

int Fraction::get_parent() {
	return parent;
}


int main(void)
{
   ifstream inStream;
   int cases;
   int a; int b;
   int result;

   inStream.open("input.txt");
   if(inStream.fail())
   {
      cerr<<"Input file opening failed./n";
      exit(1);
   }

   inStream>>cases;
   for(int i=0; i<cases; i++)
   {
	   inStream>> a >> b;
	   Fraction frac1(a,b); 

	 while(1) {
		 Fraction frac2(1,(frac1.get_parent()/frac1.get_child())+1);
		 if((frac1.get_parent() % frac1.get_child()) == 0) {
		  result = b;
		  break;
	  }
	  else
	  {
		  frac1.calclulation(frac1,frac2);
		  if(frac1.get_child() == 1) {
			  result = frac1.get_parent();
			  break;
		  }
	  }
	 }
	 cout << result << endl;
   }
}