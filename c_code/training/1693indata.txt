#include <cstdio>
#include <algorithm>
#include <cstring>

struct Point {
	int x;
	int y;
};

Point points[100001];
int cnt[100001];

bool comp(const Point &a, const Point &b) {
	return (a.x != b.x) ? a.x < b.x : a.y < b.y;
}

void reverse(Point *a, int head, int tail){
	if (head >= tail) return;
	else {
		std::swap(a[head], a[tail]);
		reverse(a, head + 1, tail - 1);
	}
}

int main(void) {
	int time;
	freopen("input.txt", "r", stdin);
	scanf("%d", &time);

	while (time--) {
		memset(cnt, 0, sizeof(cnt));

		int n;
		scanf("%d", &n);

		for (int i = 1; i <= n; i++) {
			scanf("%d %d", &points[i].x, &points[i].y);
			
			cnt[points[i].x]++;
		}

		std::sort(points+1, points + n+1, comp);

		int t = 1, k=0;

		points[0].x = -1;
		points[0].y = 0;

		while (t <= n) {
			if (points[t].x != points[t-1].x && points[t].y != points[t - 1].y) {
				reverse(points, t, t + cnt[points[t].x] - 1);
			}
			
			t++;
		}
		int p, inp;
		scanf("%d", &p);
		for (int i = 0; i < p; i++) {
			scanf("%d", &inp);
			printf("%d %d\n", points[inp].x, points[inp].y);
		}
	}

	return 0;
}