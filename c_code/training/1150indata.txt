
#include <iostream>
#include <fstream>

#define MAX_SIZE 44

int getTriangle(int n) {
	return n * (n + 1) / 2;
}

int getCT(int n) {
	int left = 0, right = MAX_SIZE;
	int mid;

	while (left <= right) {
		mid = left + (right - left) / 2;

		if (getTriangle(mid) <= n && n < getTriangle(mid + 1)) {
			return mid;
		}
		else if (getTriangle(mid) < n) {
			left = mid + 1;
		}
		else if (getTriangle(mid) > n) {
			right = mid - 1;
		}
	}
}

void isEureka(int n) {
	int a = getCT(n);
	int b = a - 1, c = a - 1;
	
	while (true) {

		if (getTriangle(a) + getTriangle(b) + getTriangle(c) == n) {
			std::cout << 1 << std::endl;
			break;
		}
		else if (getTriangle(a) + getTriangle(b) + getTriangle(c) < n && getTriangle(a - 1) * 3 < n) {
			std::cout << 0 << std::endl;
			break;
		}
		if (c < 1) {
			b -= 1;
			c = b;
		}
		if (getTriangle(a) >= n || b < 1 || c < 1) {
			a -= 1;
			b = a; 
			c = a;
		}
		else if (getTriangle(a) + getTriangle(b) >= n) {
			b -= 1;
			c -= 1;
		}
		else {
			c -= 1;
		}
	}
}

int main() {	
	std::ifstream fin;

	fin.open("input.txt");
	int numcase, num;
	if (fin.is_open() == false)  return -1;

	fin >> numcase;
	for (int i = 0; i < numcase; i++) {
		fin >> num;
		isEureka(num);
	}
	fin.close();
}