
#include <iostream>
#include <fstream>
#include <cstdlib>
using namespace std;

int *arr;
int count = 0;
void Twonumber(int s, int k)
{
   int start,end,min=1000000000;
   start = 0;
   end = s - 1;
   while (start < end) 
   {
      if (abs(k - arr[start] - arr[end]) < min) 
	  { 
         min = abs(k - arr[start] - arr[end]);
         count = 1;
      }
      else if (abs(k - arr[start] - arr[end]) == min)
	  {
         count++;
      }
      if (arr[start] + arr[end] < k)  
         start++;
      else                             
         end--;
   }
}

int arrPartition(int arr[], int low, int high)
{
	
   int j;
   int pivot, Pos, temp;
   pivot = arr[low];
   j = low;
   for(int i = low + 1; i <= high; i++)
   {
      if (arr[i] < pivot)
      {
         j++;
         temp = arr[i]; 
		 arr[i] = arr[j]; 
		 arr[j] = temp;
      }
   }
   Pos = j;
   temp = arr[low]; 
   arr[low] = arr[Pos]; 
   arr[Pos] = temp;
   return Pos;
}

void quickSort(int v[], int low, int high)
{
   int Pos;
   if (high > low)
   {
      Pos = arrPartition(v, low, high);
      quickSort(v, low, Pos - 1);
      quickSort(v, Pos + 1, high);
   }
}
int main(void)
{
   int testcase, j;
   int S, K;
   ifstream instream;
   instream.open("input.txt");
   if(!instream)
   {
	   cout << "파일을 열 수 없습니다" << endl;
	   return 0;
   }
   instream >> testcase;
   for(int i = 0; i < testcase; i++)
   {
      instream >> S >> K;
      arr = (int*)malloc(sizeof(int)*S);
      for (j = 0; j < S; j++)
	  {
		  instream >> arr[j];
      }
      quickSort(arr, 0, S-1);
      count = 0;
      Twonumber(S, K);
      cout << count << endl;
      free(arr);
   }
   return 0;
}
