

#include <stdio.h>
#include <stdlib.h>
int roomSIZE[100]; 
int floodFill(char **fig, int x, int y, char oldChar, char newChar, int *count) 
{
	if (fig[x][y] == oldChar) roomSIZE[*count]++; 
	if (fig[x][y] != oldChar) 
		return 1;
	else 
	{
		fig[x][y] = newChar; 
		floodFill(fig, x - 1, y, oldChar, newChar, count); 
		floodFill(fig, x + 1, y, oldChar, newChar, count); 
		floodFill(fig, x, y - 1, oldChar, newChar, count); 
		floodFill(fig, x, y + 1, oldChar, newChar, count); 
	}
}
void Sorting(int *dataSet, const int posLeft, const int posRight) 
{
	int i = 0, j = 0;
	int largest = 0;
	int temp = 0;
	for (i = 0; i < posRight; i++)
	{
		for (j = 0; j < posRight; j++)
		{
			if (dataSet[j] < dataSet[j + 1]) 
			{
				temp = dataSet[j];
				dataSet[j] = dataSet[j + 1];
				dataSet[j + 1] = temp;
			}
		}
	}
}
int main()
{
	int t, row, col, i, j, count = 0;
	unsigned char **Room;
	unsigned char temp;
	FILE *fp;
	fp = fopen("input.txt", "r");
	if (fp == NULL) return 0; 
	fscanf(fp, "%d", &t); 
	while (t--)
	{
		fscanf(fp, "%d %d", &col, &row); 
		Room = (unsigned char**)malloc(sizeof(unsigned char*)*row); 
		for (i = 0; i < row; i++)
			Room[i] = (unsigned char*)malloc(sizeof(unsigned char)*(col));
		for (i = 0; i < row; i++)
		{
			for (j = 0; j < col; j++)
			{
				fscanf(fp, "%c", &temp);
				while ((temp != '.') && (temp != '+')) fscanf(fp, "%c", &temp);
				Room[i][j] = temp;
			}
		}
		for (i = 1; i < row-1; i++) for (j = 0; j < col; j++) if (Room[i][j] == '.') count += floodFill(Room, i, j, '.', '+', &count); 		
		printf("%d\n", count); 
		Sorting(roomSIZE, 0, count);
		for (i = 0; i < count; i++)
			printf("%d ", roomSIZE[i]);
		printf("\n");
		for (i = 0; i < row; i++) 
		{
			free(Room[i]);
			Room[i] = NULL;
		}
		free(Room);
		Room = NULL;
		for (i = 0; i < count; i++) roomSIZE[i] = 0; 
		count = 0; 
	}
	fclose(fp); 
	return 1;
}